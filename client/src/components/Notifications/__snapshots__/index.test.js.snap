// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Notifications />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="notifications"
>
        <button
                className="notification-button"
                onClick={[Function]}
        >
                <i
                        className="fa far fa-bell"
                />
        </button>
        <div
                className="notifications-animation-wrapper"
        >
                <TransitionGroup
                        childFactory={[Function]}
                        component="div"
                />
        </div>
</div>,
      "onHide": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="notification-button"
            onClick={[Function]}
>
            <i
                        className="fa far fa-bell"
            />
</button>,
          <div
            className="notifications-animation-wrapper"
>
            <TransitionGroup
                        childFactory={[Function]}
                        component="div"
            />
</div>,
        ],
        "className": "notifications",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa far fa-bell"
/>,
            "className": "notification-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa far fa-bell",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TransitionGroup
              childFactory={[Function]}
              component="div"
/>,
            "className": "notifications-animation-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "childFactory": [Function],
              "children": false,
              "component": "div",
            },
            "ref": null,
            "rendered": false,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="notifications"
>
          <button
                    className="notification-button"
                    onClick={[Function]}
          >
                    <i
                              className="fa far fa-bell"
                    />
          </button>
          <div
                    className="notifications-animation-wrapper"
          >
                    <TransitionGroup
                              childFactory={[Function]}
                              component="div"
                    />
          </div>
</div>,
        "onHide": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="notification-button"
              onClick={[Function]}
>
              <i
                            className="fa far fa-bell"
              />
</button>,
            <div
              className="notifications-animation-wrapper"
>
              <TransitionGroup
                            childFactory={[Function]}
                            component="div"
              />
</div>,
          ],
          "className": "notifications",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fa far fa-bell"
/>,
              "className": "notification-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa far fa-bell",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TransitionGroup
                childFactory={[Function]}
                component="div"
/>,
              "className": "notifications-animation-wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "childFactory": [Function],
                "children": false,
                "component": "div",
              },
              "ref": null,
              "rendered": false,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
