// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchQuery
    fields={
        Array [
            Object {
              "input": Object {
                "type": "text",
              },
              "label": "test",
              "name": "test",
              "operators": "all",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="filters"
>
          <div
                    className="search-query-wrapper"
          >
                    <div
                              className="search-query-title"
                    >
                              Filters
                    </div>
                    <div
                              className="search-query"
                    >
                              <TwoWayQuerybuilder
                                        buttonsText={Object {}}
                                        config={
                                                  Object {
                                                            "selectRenderer": [Function],
                                                            "styles": Object {
                                                              "condition": "condition",
                                                              "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                              "input": "ui-inputtext ui-state-default ui-corner-all",
                                                              "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                              "rule": "rule",
                                                              "select": "querySelect",
                                                              "txtArea": "queryText",
                                                            },
                                                          }
                                        }
                                        fields={
                                                  Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "test",
                                                              "name": "test",
                                                              "operators": "all",
                                                            },
                                                          ]
                                        }
                                        onChange={undefined}
                              />
                    </div>
          </div>
</div>,
        undefined,
      ],
      "className": "filters-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="search-query-wrapper"
>
            <div
                        className="search-query-title"
            >
                        Filters
            </div>
            <div
                        className="search-query"
            >
                        <TwoWayQuerybuilder
                                    buttonsText={Object {}}
                                    config={
                                                Object {
                                                            "selectRenderer": [Function],
                                                            "styles": Object {
                                                              "condition": "condition",
                                                              "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                              "input": "ui-inputtext ui-state-default ui-corner-all",
                                                              "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                              "rule": "rule",
                                                              "select": "querySelect",
                                                              "txtArea": "queryText",
                                                            },
                                                          }
                                    }
                                    fields={
                                                Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "test",
                                                              "name": "test",
                                                              "operators": "all",
                                                            },
                                                          ]
                                    }
                                    onChange={undefined}
                        />
            </div>
</div>,
          "className": "filters",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="search-query-title"
>
                Filters
</div>,
              <div
                className="search-query"
>
                <TwoWayQuerybuilder
                                buttonsText={Object {}}
                                config={
                                                Object {
                                                                "selectRenderer": [Function],
                                                                "styles": Object {
                                                                  "condition": "condition",
                                                                  "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                                  "input": "ui-inputtext ui-state-default ui-corner-all",
                                                                  "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                                  "rule": "rule",
                                                                  "select": "querySelect",
                                                                  "txtArea": "queryText",
                                                                },
                                                              }
                                }
                                fields={
                                                Array [
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "test",
                                                                  "name": "test",
                                                                  "operators": "all",
                                                                },
                                                              ]
                                }
                                onChange={undefined}
                />
</div>,
            ],
            "className": "search-query-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Filters",
                "className": "search-query-title",
              },
              "ref": null,
              "rendered": "Filters",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TwoWayQuerybuilder
                  buttonsText={Object {}}
                  config={
                                    Object {
                                                      "selectRenderer": [Function],
                                                      "styles": Object {
                                                        "condition": "condition",
                                                        "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                        "input": "ui-inputtext ui-state-default ui-corner-all",
                                                        "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                        "rule": "rule",
                                                        "select": "querySelect",
                                                        "txtArea": "queryText",
                                                      },
                                                    }
                  }
                  fields={
                                    Array [
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "test",
                                                        "name": "test",
                                                        "operators": "all",
                                                      },
                                                    ]
                  }
                  onChange={undefined}
/>,
                "className": "search-query",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buttonsText": Object {},
                  "config": Object {
                    "selectRenderer": [Function],
                    "styles": Object {
                      "condition": "condition",
                      "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                      "input": "ui-inputtext ui-state-default ui-corner-all",
                      "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                      "rule": "rule",
                      "select": "querySelect",
                      "txtArea": "queryText",
                    },
                  },
                  "fields": Array [
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "test",
                      "name": "test",
                      "operators": "all",
                    },
                  ],
                  "onChange": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="filters"
>
            <div
                        className="search-query-wrapper"
            >
                        <div
                                    className="search-query-title"
                        >
                                    Filters
                        </div>
                        <div
                                    className="search-query"
                        >
                                    <TwoWayQuerybuilder
                                                buttonsText={Object {}}
                                                config={
                                                            Object {
                                                                        "selectRenderer": [Function],
                                                                        "styles": Object {
                                                                          "condition": "condition",
                                                                          "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                                          "input": "ui-inputtext ui-state-default ui-corner-all",
                                                                          "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                                          "rule": "rule",
                                                                          "select": "querySelect",
                                                                          "txtArea": "queryText",
                                                                        },
                                                                      }
                                                }
                                                fields={
                                                            Array [
                                                                        Object {
                                                                          "input": Object {
                                                                            "type": "text",
                                                                          },
                                                                          "label": "test",
                                                                          "name": "test",
                                                                          "operators": "all",
                                                                        },
                                                                      ]
                                                }
                                                onChange={undefined}
                                    />
                        </div>
            </div>
</div>,
          undefined,
        ],
        "className": "filters-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="search-query-wrapper"
>
              <div
                            className="search-query-title"
              >
                            Filters
              </div>
              <div
                            className="search-query"
              >
                            <TwoWayQuerybuilder
                                          buttonsText={Object {}}
                                          config={
                                                        Object {
                                                                      "selectRenderer": [Function],
                                                                      "styles": Object {
                                                                        "condition": "condition",
                                                                        "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                                        "input": "ui-inputtext ui-state-default ui-corner-all",
                                                                        "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                                        "rule": "rule",
                                                                        "select": "querySelect",
                                                                        "txtArea": "queryText",
                                                                      },
                                                                    }
                                          }
                                          fields={
                                                        Array [
                                                                      Object {
                                                                        "input": Object {
                                                                          "type": "text",
                                                                        },
                                                                        "label": "test",
                                                                        "name": "test",
                                                                        "operators": "all",
                                                                      },
                                                                    ]
                                          }
                                          onChange={undefined}
                            />
              </div>
</div>,
            "className": "filters",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="search-query-title"
>
                  Filters
</div>,
                <div
                  className="search-query"
>
                  <TwoWayQuerybuilder
                                    buttonsText={Object {}}
                                    config={
                                                      Object {
                                                                        "selectRenderer": [Function],
                                                                        "styles": Object {
                                                                          "condition": "condition",
                                                                          "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                                          "input": "ui-inputtext ui-state-default ui-corner-all",
                                                                          "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                                          "rule": "rule",
                                                                          "select": "querySelect",
                                                                          "txtArea": "queryText",
                                                                        },
                                                                      }
                                    }
                                    fields={
                                                      Array [
                                                                        Object {
                                                                          "input": Object {
                                                                            "type": "text",
                                                                          },
                                                                          "label": "test",
                                                                          "name": "test",
                                                                          "operators": "all",
                                                                        },
                                                                      ]
                                    }
                                    onChange={undefined}
                  />
</div>,
              ],
              "className": "search-query-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Filters",
                  "className": "search-query-title",
                },
                "ref": null,
                "rendered": "Filters",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TwoWayQuerybuilder
                    buttonsText={Object {}}
                    config={
                                        Object {
                                                            "selectRenderer": [Function],
                                                            "styles": Object {
                                                              "condition": "condition",
                                                              "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                                                              "input": "ui-inputtext ui-state-default ui-corner-all",
                                                              "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                                                              "rule": "rule",
                                                              "select": "querySelect",
                                                              "txtArea": "queryText",
                                                            },
                                                          }
                    }
                    fields={
                                        Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "test",
                                                              "name": "test",
                                                              "operators": "all",
                                                            },
                                                          ]
                    }
                    onChange={undefined}
/>,
                  "className": "search-query",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "buttonsText": Object {},
                    "config": Object {
                      "selectRenderer": [Function],
                      "styles": Object {
                        "condition": "condition",
                        "deleteBtn": "ui-corner-all ui-widget ui-button ui-button-danger ui-state-default",
                        "input": "ui-inputtext ui-state-default ui-corner-all",
                        "primaryBtn": "ui-corner-all ui-widget ui-button ui-state-default",
                        "rule": "rule",
                        "select": "querySelect",
                        "txtArea": "queryText",
                      },
                    },
                    "fields": Array [
                      Object {
                        "input": Object {
                          "type": "text",
                        },
                        "label": "test",
                        "name": "test",
                        "operators": "all",
                      },
                    ],
                    "onChange": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
