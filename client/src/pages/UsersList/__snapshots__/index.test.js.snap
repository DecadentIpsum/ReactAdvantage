// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`form is working correctly click on "create user" is showing create user form 1`] = `
ShallowWrapper {
  "length": 1,
  "onEdit": [Function],
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UsersList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <PageHeader
          actions={
                    Array [
                              <Button
                                onClick={[Function]}
                    >
                                Export
                    </Button>,
                              <Button
                                onClick={[Function]}
                    >
                                Create new user
                    </Button>,
                            ]
          }
          subtitle="Manage users and permission."
          title="Users"
/>,
        <div
          className="user-table"
>
          <div
                    className="users-table-header"
          >
                    <SearchQuery
                              fields={
                                        Array [
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "First Name",
                                                    "name": "firstName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Name",
                                                    "name": "name",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Last Name",
                                                    "name": "lastName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Roles",
                                                    "name": "role",
                                                    "operators": Array [
                                                      "=",
                                                    ],
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Email",
                                                    "name": "email",
                                                    "operators": "all",
                                                  },
                                                ]
                              }
                              onChange={[Function]}
                              onSearch={[Function]}
                    />
          </div>
          <div
                    className="users-table-select"
          >
                    <Dropdown
                              onChange={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Show 10 entries",
                                                    "value": 10,
                                                  },
                                                  Object {
                                                    "label": "Show 25 entries",
                                                    "value": 25,
                                                  },
                                                  Object {
                                                    "label": "Show 50 entries",
                                                    "value": 50,
                                                  },
                                                  Object {
                                                    "label": "Show 100 entries",
                                                    "value": 100,
                                                  },
                                                ]
                              }
                              value={10}
                    />
          </div>
          <Table
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-actions-cell"
                              field="actions"
                              header=""
                              sortable={undefined}
                    />
          </Table>
          <Table
                    className="hidden"
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
          </Table>
</div>,
        <Form
          onHide={[Function]}
          onSubmit={[Function]}
          user={Object {}}
          visible={true}
/>,
      ],
      "className": "users-list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "actions": Array [
            <Button
              onClick={[Function]}
>
              Export
</Button>,
            <Button
              onClick={[Function]}
>
              Create new user
</Button>,
          ],
          "subtitle": "Manage users and permission.",
          "title": "Users",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="users-table-header"
>
              <SearchQuery
                            fields={
                                          Array [
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "First Name",
                                                          "name": "firstName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Name",
                                                          "name": "name",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Last Name",
                                                          "name": "lastName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Roles",
                                                          "name": "role",
                                                          "operators": Array [
                                                            "=",
                                                          ],
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Email",
                                                          "name": "email",
                                                          "operators": "all",
                                                        },
                                                      ]
                            }
                            onChange={[Function]}
                            onSearch={[Function]}
              />
</div>,
            <div
              className="users-table-select"
>
              <Dropdown
                            onChange={[Function]}
                            options={
                                          Array [
                                                        Object {
                                                          "label": "Show 10 entries",
                                                          "value": 10,
                                                        },
                                                        Object {
                                                          "label": "Show 25 entries",
                                                          "value": 25,
                                                        },
                                                        Object {
                                                          "label": "Show 50 entries",
                                                          "value": 50,
                                                        },
                                                        Object {
                                                          "label": "Show 100 entries",
                                                          "value": 100,
                                                        },
                                                      ]
                            }
                            value={10}
              />
</div>,
            <Table
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-actions-cell"
                            field="actions"
                            header=""
                            sortable={undefined}
              />
</Table>,
            <Table
              className="hidden"
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
</Table>,
          ],
          "className": "user-table",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SearchQuery
                fields={
                                Array [
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "First Name",
                                                  "name": "firstName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Name",
                                                  "name": "name",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Last Name",
                                                  "name": "lastName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Roles",
                                                  "name": "role",
                                                  "operators": Array [
                                                    "=",
                                                  ],
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Email",
                                                  "name": "email",
                                                  "operators": "all",
                                                },
                                              ]
                }
                onChange={[Function]}
                onSearch={[Function]}
/>,
              "className": "users-table-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fields": Array [
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "First Name",
                    "name": "firstName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Name",
                    "name": "name",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Last Name",
                    "name": "lastName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Roles",
                    "name": "role",
                    "operators": Array [
                      "=",
                    ],
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Email",
                    "name": "email",
                    "operators": "all",
                  },
                ],
                "onChange": [Function],
                "onSearch": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Dropdown
                onChange={[Function]}
                options={
                                Array [
                                                Object {
                                                  "label": "Show 10 entries",
                                                  "value": 10,
                                                },
                                                Object {
                                                  "label": "Show 25 entries",
                                                  "value": 25,
                                                },
                                                Object {
                                                  "label": "Show 50 entries",
                                                  "value": 50,
                                                },
                                                Object {
                                                  "label": "Show 100 entries",
                                                  "value": 100,
                                                },
                                              ]
                }
                value={10}
/>,
              "className": "users-table-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "options": Array [
                  Object {
                    "label": "Show 10 entries",
                    "value": 10,
                  },
                  Object {
                    "label": "Show 25 entries",
                    "value": 25,
                  },
                  Object {
                    "label": "Show 50 entries",
                    "value": 50,
                  },
                  Object {
                    "label": "Show 100 entries",
                    "value": 100,
                  },
                ],
                "value": 10,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-actions-cell"
                  field="actions"
                  header=""
                  sortable={undefined}
/>,
              ],
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "7",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-actions-cell",
                  "field": "actions",
                  "header": "",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
              ],
              "className": "hidden",
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onHide": [Function],
          "onSubmit": [Function],
          "user": Object {},
          "visible": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <PageHeader
            actions={
                        Array [
                                    <Button
                                      onClick={[Function]}
                        >
                                      Export
                        </Button>,
                                    <Button
                                      onClick={[Function]}
                        >
                                      Create new user
                        </Button>,
                                  ]
            }
            subtitle="Manage users and permission."
            title="Users"
/>,
          <div
            className="user-table"
>
            <div
                        className="users-table-header"
            >
                        <SearchQuery
                                    fields={
                                                Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "First Name",
                                                              "name": "firstName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Name",
                                                              "name": "name",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Last Name",
                                                              "name": "lastName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Roles",
                                                              "name": "role",
                                                              "operators": Array [
                                                                "=",
                                                              ],
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Email",
                                                              "name": "email",
                                                              "operators": "all",
                                                            },
                                                          ]
                                    }
                                    onChange={[Function]}
                                    onSearch={[Function]}
                        />
            </div>
            <div
                        className="users-table-select"
            >
                        <Dropdown
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Show 10 entries",
                                                              "value": 10,
                                                            },
                                                            Object {
                                                              "label": "Show 25 entries",
                                                              "value": 25,
                                                            },
                                                            Object {
                                                              "label": "Show 50 entries",
                                                              "value": 50,
                                                            },
                                                            Object {
                                                              "label": "Show 100 entries",
                                                              "value": 100,
                                                            },
                                                          ]
                                    }
                                    value={10}
                        />
            </div>
            <Table
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-actions-cell"
                                    field="actions"
                                    header=""
                                    sortable={undefined}
                        />
            </Table>
            <Table
                        className="hidden"
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
            </Table>
</div>,
          <Form
            onHide={[Function]}
            onSubmit={[Function]}
            user={Object {}}
            visible={true}
/>,
        ],
        "className": "users-list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "actions": Array [
              <Button
                onClick={[Function]}
>
                Export
</Button>,
              <Button
                onClick={[Function]}
>
                Create new user
</Button>,
            ],
            "subtitle": "Manage users and permission.",
            "title": "Users",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="users-table-header"
>
                <SearchQuery
                                fields={
                                                Array [
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "First Name",
                                                                  "name": "firstName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Name",
                                                                  "name": "name",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Last Name",
                                                                  "name": "lastName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Roles",
                                                                  "name": "role",
                                                                  "operators": Array [
                                                                    "=",
                                                                  ],
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Email",
                                                                  "name": "email",
                                                                  "operators": "all",
                                                                },
                                                              ]
                                }
                                onChange={[Function]}
                                onSearch={[Function]}
                />
</div>,
              <div
                className="users-table-select"
>
                <Dropdown
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Show 10 entries",
                                                                  "value": 10,
                                                                },
                                                                Object {
                                                                  "label": "Show 25 entries",
                                                                  "value": 25,
                                                                },
                                                                Object {
                                                                  "label": "Show 50 entries",
                                                                  "value": 50,
                                                                },
                                                                Object {
                                                                  "label": "Show 100 entries",
                                                                  "value": 100,
                                                                },
                                                              ]
                                }
                                value={10}
                />
</div>,
              <Table
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-actions-cell"
                                field="actions"
                                header=""
                                sortable={undefined}
                />
</Table>,
              <Table
                className="hidden"
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
</Table>,
            ],
            "className": "user-table",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <SearchQuery
                  fields={
                                    Array [
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "First Name",
                                                        "name": "firstName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Name",
                                                        "name": "name",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Last Name",
                                                        "name": "lastName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Roles",
                                                        "name": "role",
                                                        "operators": Array [
                                                          "=",
                                                        ],
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Email",
                                                        "name": "email",
                                                        "operators": "all",
                                                      },
                                                    ]
                  }
                  onChange={[Function]}
                  onSearch={[Function]}
/>,
                "className": "users-table-header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fields": Array [
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "First Name",
                      "name": "firstName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Name",
                      "name": "name",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Last Name",
                      "name": "lastName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Roles",
                      "name": "role",
                      "operators": Array [
                        "=",
                      ],
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Email",
                      "name": "email",
                      "operators": "all",
                    },
                  ],
                  "onChange": [Function],
                  "onSearch": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Dropdown
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Show 10 entries",
                                                        "value": 10,
                                                      },
                                                      Object {
                                                        "label": "Show 25 entries",
                                                        "value": 25,
                                                      },
                                                      Object {
                                                        "label": "Show 50 entries",
                                                        "value": 50,
                                                      },
                                                      Object {
                                                        "label": "Show 100 entries",
                                                        "value": 100,
                                                      },
                                                    ]
                  }
                  value={10}
/>,
                "className": "users-table-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Show 10 entries",
                      "value": 10,
                    },
                    Object {
                      "label": "Show 25 entries",
                      "value": 25,
                    },
                    Object {
                      "label": "Show 50 entries",
                      "value": 50,
                    },
                    Object {
                      "label": "Show 100 entries",
                      "value": 100,
                    },
                  ],
                  "value": 10,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-actions-cell"
                    field="actions"
                    header=""
                    sortable={undefined}
/>,
                ],
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "7",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-actions-cell",
                    "field": "actions",
                    "header": "",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                ],
                "className": "hidden",
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": [Function],
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onHide": [Function],
            "onSubmit": [Function],
            "user": Object {},
            "visible": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`render correctly with form 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UsersList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <PageHeader
          actions={
                    Array [
                              <Button
                                onClick={[Function]}
                    >
                                Export
                    </Button>,
                              <Button
                                onClick={[Function]}
                    >
                                Create new user
                    </Button>,
                            ]
          }
          subtitle="Manage users and permission."
          title="Users"
/>,
        <div
          className="user-table"
>
          <div
                    className="users-table-header"
          >
                    <SearchQuery
                              fields={
                                        Array [
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "First Name",
                                                    "name": "firstName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Name",
                                                    "name": "name",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Last Name",
                                                    "name": "lastName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Roles",
                                                    "name": "role",
                                                    "operators": Array [
                                                      "=",
                                                    ],
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Email",
                                                    "name": "email",
                                                    "operators": "all",
                                                  },
                                                ]
                              }
                              onChange={[Function]}
                              onSearch={[Function]}
                    />
          </div>
          <div
                    className="users-table-select"
          >
                    <Dropdown
                              onChange={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Show 10 entries",
                                                    "value": 10,
                                                  },
                                                  Object {
                                                    "label": "Show 25 entries",
                                                    "value": 25,
                                                  },
                                                  Object {
                                                    "label": "Show 50 entries",
                                                    "value": 50,
                                                  },
                                                  Object {
                                                    "label": "Show 100 entries",
                                                    "value": 100,
                                                  },
                                                ]
                              }
                              value={10}
                    />
          </div>
          <Table
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-actions-cell"
                              field="actions"
                              header=""
                              sortable={undefined}
                    />
          </Table>
          <Table
                    className="hidden"
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
          </Table>
</div>,
        <Form
          onHide={[Function]}
          onSubmit={[Function]}
          user={Object {}}
          visible={true}
/>,
      ],
      "className": "users-list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "actions": Array [
            <Button
              onClick={[Function]}
>
              Export
</Button>,
            <Button
              onClick={[Function]}
>
              Create new user
</Button>,
          ],
          "subtitle": "Manage users and permission.",
          "title": "Users",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="users-table-header"
>
              <SearchQuery
                            fields={
                                          Array [
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "First Name",
                                                          "name": "firstName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Name",
                                                          "name": "name",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Last Name",
                                                          "name": "lastName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Roles",
                                                          "name": "role",
                                                          "operators": Array [
                                                            "=",
                                                          ],
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Email",
                                                          "name": "email",
                                                          "operators": "all",
                                                        },
                                                      ]
                            }
                            onChange={[Function]}
                            onSearch={[Function]}
              />
</div>,
            <div
              className="users-table-select"
>
              <Dropdown
                            onChange={[Function]}
                            options={
                                          Array [
                                                        Object {
                                                          "label": "Show 10 entries",
                                                          "value": 10,
                                                        },
                                                        Object {
                                                          "label": "Show 25 entries",
                                                          "value": 25,
                                                        },
                                                        Object {
                                                          "label": "Show 50 entries",
                                                          "value": 50,
                                                        },
                                                        Object {
                                                          "label": "Show 100 entries",
                                                          "value": 100,
                                                        },
                                                      ]
                            }
                            value={10}
              />
</div>,
            <Table
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-actions-cell"
                            field="actions"
                            header=""
                            sortable={undefined}
              />
</Table>,
            <Table
              className="hidden"
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
</Table>,
          ],
          "className": "user-table",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SearchQuery
                fields={
                                Array [
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "First Name",
                                                  "name": "firstName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Name",
                                                  "name": "name",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Last Name",
                                                  "name": "lastName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Roles",
                                                  "name": "role",
                                                  "operators": Array [
                                                    "=",
                                                  ],
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Email",
                                                  "name": "email",
                                                  "operators": "all",
                                                },
                                              ]
                }
                onChange={[Function]}
                onSearch={[Function]}
/>,
              "className": "users-table-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fields": Array [
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "First Name",
                    "name": "firstName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Name",
                    "name": "name",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Last Name",
                    "name": "lastName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Roles",
                    "name": "role",
                    "operators": Array [
                      "=",
                    ],
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Email",
                    "name": "email",
                    "operators": "all",
                  },
                ],
                "onChange": [Function],
                "onSearch": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Dropdown
                onChange={[Function]}
                options={
                                Array [
                                                Object {
                                                  "label": "Show 10 entries",
                                                  "value": 10,
                                                },
                                                Object {
                                                  "label": "Show 25 entries",
                                                  "value": 25,
                                                },
                                                Object {
                                                  "label": "Show 50 entries",
                                                  "value": 50,
                                                },
                                                Object {
                                                  "label": "Show 100 entries",
                                                  "value": 100,
                                                },
                                              ]
                }
                value={10}
/>,
              "className": "users-table-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "options": Array [
                  Object {
                    "label": "Show 10 entries",
                    "value": 10,
                  },
                  Object {
                    "label": "Show 25 entries",
                    "value": 25,
                  },
                  Object {
                    "label": "Show 50 entries",
                    "value": 50,
                  },
                  Object {
                    "label": "Show 100 entries",
                    "value": 100,
                  },
                ],
                "value": 10,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-actions-cell"
                  field="actions"
                  header=""
                  sortable={undefined}
/>,
              ],
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "7",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-actions-cell",
                  "field": "actions",
                  "header": "",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
              ],
              "className": "hidden",
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onHide": [Function],
          "onSubmit": [Function],
          "user": Object {},
          "visible": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <PageHeader
            actions={
                        Array [
                                    <Button
                                      onClick={[Function]}
                        >
                                      Export
                        </Button>,
                                    <Button
                                      onClick={[Function]}
                        >
                                      Create new user
                        </Button>,
                                  ]
            }
            subtitle="Manage users and permission."
            title="Users"
/>,
          <div
            className="user-table"
>
            <div
                        className="users-table-header"
            >
                        <SearchQuery
                                    fields={
                                                Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "First Name",
                                                              "name": "firstName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Name",
                                                              "name": "name",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Last Name",
                                                              "name": "lastName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Roles",
                                                              "name": "role",
                                                              "operators": Array [
                                                                "=",
                                                              ],
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Email",
                                                              "name": "email",
                                                              "operators": "all",
                                                            },
                                                          ]
                                    }
                                    onChange={[Function]}
                                    onSearch={[Function]}
                        />
            </div>
            <div
                        className="users-table-select"
            >
                        <Dropdown
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Show 10 entries",
                                                              "value": 10,
                                                            },
                                                            Object {
                                                              "label": "Show 25 entries",
                                                              "value": 25,
                                                            },
                                                            Object {
                                                              "label": "Show 50 entries",
                                                              "value": 50,
                                                            },
                                                            Object {
                                                              "label": "Show 100 entries",
                                                              "value": 100,
                                                            },
                                                          ]
                                    }
                                    value={10}
                        />
            </div>
            <Table
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-actions-cell"
                                    field="actions"
                                    header=""
                                    sortable={undefined}
                        />
            </Table>
            <Table
                        className="hidden"
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
            </Table>
</div>,
          <Form
            onHide={[Function]}
            onSubmit={[Function]}
            user={Object {}}
            visible={true}
/>,
        ],
        "className": "users-list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "actions": Array [
              <Button
                onClick={[Function]}
>
                Export
</Button>,
              <Button
                onClick={[Function]}
>
                Create new user
</Button>,
            ],
            "subtitle": "Manage users and permission.",
            "title": "Users",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="users-table-header"
>
                <SearchQuery
                                fields={
                                                Array [
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "First Name",
                                                                  "name": "firstName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Name",
                                                                  "name": "name",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Last Name",
                                                                  "name": "lastName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Roles",
                                                                  "name": "role",
                                                                  "operators": Array [
                                                                    "=",
                                                                  ],
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Email",
                                                                  "name": "email",
                                                                  "operators": "all",
                                                                },
                                                              ]
                                }
                                onChange={[Function]}
                                onSearch={[Function]}
                />
</div>,
              <div
                className="users-table-select"
>
                <Dropdown
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Show 10 entries",
                                                                  "value": 10,
                                                                },
                                                                Object {
                                                                  "label": "Show 25 entries",
                                                                  "value": 25,
                                                                },
                                                                Object {
                                                                  "label": "Show 50 entries",
                                                                  "value": 50,
                                                                },
                                                                Object {
                                                                  "label": "Show 100 entries",
                                                                  "value": 100,
                                                                },
                                                              ]
                                }
                                value={10}
                />
</div>,
              <Table
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-actions-cell"
                                field="actions"
                                header=""
                                sortable={undefined}
                />
</Table>,
              <Table
                className="hidden"
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
</Table>,
            ],
            "className": "user-table",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <SearchQuery
                  fields={
                                    Array [
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "First Name",
                                                        "name": "firstName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Name",
                                                        "name": "name",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Last Name",
                                                        "name": "lastName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Roles",
                                                        "name": "role",
                                                        "operators": Array [
                                                          "=",
                                                        ],
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Email",
                                                        "name": "email",
                                                        "operators": "all",
                                                      },
                                                    ]
                  }
                  onChange={[Function]}
                  onSearch={[Function]}
/>,
                "className": "users-table-header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fields": Array [
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "First Name",
                      "name": "firstName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Name",
                      "name": "name",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Last Name",
                      "name": "lastName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Roles",
                      "name": "role",
                      "operators": Array [
                        "=",
                      ],
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Email",
                      "name": "email",
                      "operators": "all",
                    },
                  ],
                  "onChange": [Function],
                  "onSearch": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Dropdown
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Show 10 entries",
                                                        "value": 10,
                                                      },
                                                      Object {
                                                        "label": "Show 25 entries",
                                                        "value": 25,
                                                      },
                                                      Object {
                                                        "label": "Show 50 entries",
                                                        "value": 50,
                                                      },
                                                      Object {
                                                        "label": "Show 100 entries",
                                                        "value": 100,
                                                      },
                                                    ]
                  }
                  value={10}
/>,
                "className": "users-table-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Show 10 entries",
                      "value": 10,
                    },
                    Object {
                      "label": "Show 25 entries",
                      "value": 25,
                    },
                    Object {
                      "label": "Show 50 entries",
                      "value": 50,
                    },
                    Object {
                      "label": "Show 100 entries",
                      "value": 100,
                    },
                  ],
                  "value": 10,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-actions-cell"
                    field="actions"
                    header=""
                    sortable={undefined}
/>,
                ],
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "7",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-actions-cell",
                    "field": "actions",
                    "header": "",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                ],
                "className": "hidden",
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": [Function],
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onHide": [Function],
            "onSubmit": [Function],
            "user": Object {},
            "visible": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UsersList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <PageHeader
          actions={
                    Array [
                              <Button
                                onClick={[Function]}
                    >
                                Export
                    </Button>,
                              <Button
                                onClick={[Function]}
                    >
                                Create new user
                    </Button>,
                            ]
          }
          subtitle="Manage users and permission."
          title="Users"
/>,
        <div
          className="user-table"
>
          <div
                    className="users-table-header"
          >
                    <SearchQuery
                              fields={
                                        Array [
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "First Name",
                                                    "name": "firstName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Name",
                                                    "name": "name",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Last Name",
                                                    "name": "lastName",
                                                    "operators": "all",
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Roles",
                                                    "name": "role",
                                                    "operators": Array [
                                                      "=",
                                                    ],
                                                  },
                                                  Object {
                                                    "input": Object {
                                                      "type": "text",
                                                    },
                                                    "label": "Email",
                                                    "name": "email",
                                                    "operators": "all",
                                                  },
                                                ]
                              }
                              onChange={[Function]}
                              onSearch={[Function]}
                    />
          </div>
          <div
                    className="users-table-select"
          >
                    <Dropdown
                              onChange={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Show 10 entries",
                                                    "value": 10,
                                                  },
                                                  Object {
                                                    "label": "Show 25 entries",
                                                    "value": 25,
                                                  },
                                                  Object {
                                                    "label": "Show 50 entries",
                                                    "value": 50,
                                                  },
                                                  Object {
                                                    "label": "Show 100 entries",
                                                    "value": 100,
                                                  },
                                                ]
                              }
                              value={10}
                    />
          </div>
          <Table
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-actions-cell"
                              field="actions"
                              header=""
                              sortable={undefined}
                    />
          </Table>
          <Table
                    className="hidden"
                    paginator={true}
                    responsive={true}
                    rows={10}
                    value={Array []}
          >
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="firstName"
                              header="First Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="name"
                              header="Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="lastName"
                              header="Last Name"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="roles"
                              header="Roles"
                              sortable={undefined}
                    />
                    <Column
                              body={[Function]}
                              className={undefined}
                              field="email"
                              header="Email"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="emailConfirm"
                              header="Email Confirm"
                              sortable={true}
                    />
                    <Column
                              body={[Function]}
                              className="users-tag-cell"
                              field="active"
                              header="Active"
                              sortable={true}
                    />
          </Table>
</div>,
        false,
      ],
      "className": "users-list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "actions": Array [
            <Button
              onClick={[Function]}
>
              Export
</Button>,
            <Button
              onClick={[Function]}
>
              Create new user
</Button>,
          ],
          "subtitle": "Manage users and permission.",
          "title": "Users",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="users-table-header"
>
              <SearchQuery
                            fields={
                                          Array [
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "First Name",
                                                          "name": "firstName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Name",
                                                          "name": "name",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Last Name",
                                                          "name": "lastName",
                                                          "operators": "all",
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Roles",
                                                          "name": "role",
                                                          "operators": Array [
                                                            "=",
                                                          ],
                                                        },
                                                        Object {
                                                          "input": Object {
                                                            "type": "text",
                                                          },
                                                          "label": "Email",
                                                          "name": "email",
                                                          "operators": "all",
                                                        },
                                                      ]
                            }
                            onChange={[Function]}
                            onSearch={[Function]}
              />
</div>,
            <div
              className="users-table-select"
>
              <Dropdown
                            onChange={[Function]}
                            options={
                                          Array [
                                                        Object {
                                                          "label": "Show 10 entries",
                                                          "value": 10,
                                                        },
                                                        Object {
                                                          "label": "Show 25 entries",
                                                          "value": 25,
                                                        },
                                                        Object {
                                                          "label": "Show 50 entries",
                                                          "value": 50,
                                                        },
                                                        Object {
                                                          "label": "Show 100 entries",
                                                          "value": 100,
                                                        },
                                                      ]
                            }
                            value={10}
              />
</div>,
            <Table
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-actions-cell"
                            field="actions"
                            header=""
                            sortable={undefined}
              />
</Table>,
            <Table
              className="hidden"
              paginator={true}
              responsive={true}
              rows={10}
              value={Array []}
>
              <Column
                            body={[Function]}
                            className={undefined}
                            field="firstName"
                            header="First Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="name"
                            header="Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="lastName"
                            header="Last Name"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="roles"
                            header="Roles"
                            sortable={undefined}
              />
              <Column
                            body={[Function]}
                            className={undefined}
                            field="email"
                            header="Email"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="emailConfirm"
                            header="Email Confirm"
                            sortable={true}
              />
              <Column
                            body={[Function]}
                            className="users-tag-cell"
                            field="active"
                            header="Active"
                            sortable={true}
              />
</Table>,
          ],
          "className": "user-table",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SearchQuery
                fields={
                                Array [
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "First Name",
                                                  "name": "firstName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Name",
                                                  "name": "name",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Last Name",
                                                  "name": "lastName",
                                                  "operators": "all",
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Roles",
                                                  "name": "role",
                                                  "operators": Array [
                                                    "=",
                                                  ],
                                                },
                                                Object {
                                                  "input": Object {
                                                    "type": "text",
                                                  },
                                                  "label": "Email",
                                                  "name": "email",
                                                  "operators": "all",
                                                },
                                              ]
                }
                onChange={[Function]}
                onSearch={[Function]}
/>,
              "className": "users-table-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fields": Array [
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "First Name",
                    "name": "firstName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Name",
                    "name": "name",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Last Name",
                    "name": "lastName",
                    "operators": "all",
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Roles",
                    "name": "role",
                    "operators": Array [
                      "=",
                    ],
                  },
                  Object {
                    "input": Object {
                      "type": "text",
                    },
                    "label": "Email",
                    "name": "email",
                    "operators": "all",
                  },
                ],
                "onChange": [Function],
                "onSearch": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Dropdown
                onChange={[Function]}
                options={
                                Array [
                                                Object {
                                                  "label": "Show 10 entries",
                                                  "value": 10,
                                                },
                                                Object {
                                                  "label": "Show 25 entries",
                                                  "value": 25,
                                                },
                                                Object {
                                                  "label": "Show 50 entries",
                                                  "value": 50,
                                                },
                                                Object {
                                                  "label": "Show 100 entries",
                                                  "value": 100,
                                                },
                                              ]
                }
                value={10}
/>,
              "className": "users-table-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "options": Array [
                  Object {
                    "label": "Show 10 entries",
                    "value": 10,
                  },
                  Object {
                    "label": "Show 25 entries",
                    "value": 25,
                  },
                  Object {
                    "label": "Show 50 entries",
                    "value": 50,
                  },
                  Object {
                    "label": "Show 100 entries",
                    "value": 100,
                  },
                ],
                "value": 10,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-actions-cell"
                  field="actions"
                  header=""
                  sortable={undefined}
/>,
              ],
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "7",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-actions-cell",
                  "field": "actions",
                  "header": "",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Column
                  body={[Function]}
                  className={undefined}
                  field="firstName"
                  header="First Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="name"
                  header="Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="lastName"
                  header="Last Name"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="roles"
                  header="Roles"
                  sortable={undefined}
/>,
                <Column
                  body={[Function]}
                  className={undefined}
                  field="email"
                  header="Email"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="emailConfirm"
                  header="Email Confirm"
                  sortable={true}
/>,
                <Column
                  body={[Function]}
                  className="users-tag-cell"
                  field="active"
                  header="Active"
                  sortable={true}
/>,
              ],
              "className": "hidden",
              "paginator": true,
              "responsive": true,
              "rows": 10,
              "value": Array [],
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "firstName",
                  "header": "First Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "name",
                  "header": "Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "lastName",
                  "header": "Last Name",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "roles",
                  "header": "Roles",
                  "sortable": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": undefined,
                  "field": "email",
                  "header": "Email",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "emailConfirm",
                  "header": "Email Confirm",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "body": [Function],
                  "className": "users-tag-cell",
                  "field": "active",
                  "header": "Active",
                  "sortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      false,
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <PageHeader
            actions={
                        Array [
                                    <Button
                                      onClick={[Function]}
                        >
                                      Export
                        </Button>,
                                    <Button
                                      onClick={[Function]}
                        >
                                      Create new user
                        </Button>,
                                  ]
            }
            subtitle="Manage users and permission."
            title="Users"
/>,
          <div
            className="user-table"
>
            <div
                        className="users-table-header"
            >
                        <SearchQuery
                                    fields={
                                                Array [
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "First Name",
                                                              "name": "firstName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Name",
                                                              "name": "name",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Last Name",
                                                              "name": "lastName",
                                                              "operators": "all",
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Roles",
                                                              "name": "role",
                                                              "operators": Array [
                                                                "=",
                                                              ],
                                                            },
                                                            Object {
                                                              "input": Object {
                                                                "type": "text",
                                                              },
                                                              "label": "Email",
                                                              "name": "email",
                                                              "operators": "all",
                                                            },
                                                          ]
                                    }
                                    onChange={[Function]}
                                    onSearch={[Function]}
                        />
            </div>
            <div
                        className="users-table-select"
            >
                        <Dropdown
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Show 10 entries",
                                                              "value": 10,
                                                            },
                                                            Object {
                                                              "label": "Show 25 entries",
                                                              "value": 25,
                                                            },
                                                            Object {
                                                              "label": "Show 50 entries",
                                                              "value": 50,
                                                            },
                                                            Object {
                                                              "label": "Show 100 entries",
                                                              "value": 100,
                                                            },
                                                          ]
                                    }
                                    value={10}
                        />
            </div>
            <Table
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-actions-cell"
                                    field="actions"
                                    header=""
                                    sortable={undefined}
                        />
            </Table>
            <Table
                        className="hidden"
                        paginator={true}
                        responsive={true}
                        rows={10}
                        value={Array []}
            >
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="firstName"
                                    header="First Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="name"
                                    header="Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="lastName"
                                    header="Last Name"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="roles"
                                    header="Roles"
                                    sortable={undefined}
                        />
                        <Column
                                    body={[Function]}
                                    className={undefined}
                                    field="email"
                                    header="Email"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="emailConfirm"
                                    header="Email Confirm"
                                    sortable={true}
                        />
                        <Column
                                    body={[Function]}
                                    className="users-tag-cell"
                                    field="active"
                                    header="Active"
                                    sortable={true}
                        />
            </Table>
</div>,
          false,
        ],
        "className": "users-list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "actions": Array [
              <Button
                onClick={[Function]}
>
                Export
</Button>,
              <Button
                onClick={[Function]}
>
                Create new user
</Button>,
            ],
            "subtitle": "Manage users and permission.",
            "title": "Users",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="users-table-header"
>
                <SearchQuery
                                fields={
                                                Array [
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "First Name",
                                                                  "name": "firstName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Name",
                                                                  "name": "name",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Last Name",
                                                                  "name": "lastName",
                                                                  "operators": "all",
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Roles",
                                                                  "name": "role",
                                                                  "operators": Array [
                                                                    "=",
                                                                  ],
                                                                },
                                                                Object {
                                                                  "input": Object {
                                                                    "type": "text",
                                                                  },
                                                                  "label": "Email",
                                                                  "name": "email",
                                                                  "operators": "all",
                                                                },
                                                              ]
                                }
                                onChange={[Function]}
                                onSearch={[Function]}
                />
</div>,
              <div
                className="users-table-select"
>
                <Dropdown
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Show 10 entries",
                                                                  "value": 10,
                                                                },
                                                                Object {
                                                                  "label": "Show 25 entries",
                                                                  "value": 25,
                                                                },
                                                                Object {
                                                                  "label": "Show 50 entries",
                                                                  "value": 50,
                                                                },
                                                                Object {
                                                                  "label": "Show 100 entries",
                                                                  "value": 100,
                                                                },
                                                              ]
                                }
                                value={10}
                />
</div>,
              <Table
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-actions-cell"
                                field="actions"
                                header=""
                                sortable={undefined}
                />
</Table>,
              <Table
                className="hidden"
                paginator={true}
                responsive={true}
                rows={10}
                value={Array []}
>
                <Column
                                body={[Function]}
                                className={undefined}
                                field="firstName"
                                header="First Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="name"
                                header="Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="lastName"
                                header="Last Name"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="roles"
                                header="Roles"
                                sortable={undefined}
                />
                <Column
                                body={[Function]}
                                className={undefined}
                                field="email"
                                header="Email"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="emailConfirm"
                                header="Email Confirm"
                                sortable={true}
                />
                <Column
                                body={[Function]}
                                className="users-tag-cell"
                                field="active"
                                header="Active"
                                sortable={true}
                />
</Table>,
            ],
            "className": "user-table",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <SearchQuery
                  fields={
                                    Array [
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "First Name",
                                                        "name": "firstName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Name",
                                                        "name": "name",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Last Name",
                                                        "name": "lastName",
                                                        "operators": "all",
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Roles",
                                                        "name": "role",
                                                        "operators": Array [
                                                          "=",
                                                        ],
                                                      },
                                                      Object {
                                                        "input": Object {
                                                          "type": "text",
                                                        },
                                                        "label": "Email",
                                                        "name": "email",
                                                        "operators": "all",
                                                      },
                                                    ]
                  }
                  onChange={[Function]}
                  onSearch={[Function]}
/>,
                "className": "users-table-header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fields": Array [
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "First Name",
                      "name": "firstName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Name",
                      "name": "name",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Last Name",
                      "name": "lastName",
                      "operators": "all",
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Roles",
                      "name": "role",
                      "operators": Array [
                        "=",
                      ],
                    },
                    Object {
                      "input": Object {
                        "type": "text",
                      },
                      "label": "Email",
                      "name": "email",
                      "operators": "all",
                    },
                  ],
                  "onChange": [Function],
                  "onSearch": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Dropdown
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Show 10 entries",
                                                        "value": 10,
                                                      },
                                                      Object {
                                                        "label": "Show 25 entries",
                                                        "value": 25,
                                                      },
                                                      Object {
                                                        "label": "Show 50 entries",
                                                        "value": 50,
                                                      },
                                                      Object {
                                                        "label": "Show 100 entries",
                                                        "value": 100,
                                                      },
                                                    ]
                  }
                  value={10}
/>,
                "className": "users-table-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Show 10 entries",
                      "value": 10,
                    },
                    Object {
                      "label": "Show 25 entries",
                      "value": 25,
                    },
                    Object {
                      "label": "Show 50 entries",
                      "value": 50,
                    },
                    Object {
                      "label": "Show 100 entries",
                      "value": 100,
                    },
                  ],
                  "value": 10,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-actions-cell"
                    field="actions"
                    header=""
                    sortable={undefined}
/>,
                ],
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "7",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-actions-cell",
                    "field": "actions",
                    "header": "",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="firstName"
                    header="First Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="name"
                    header="Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="lastName"
                    header="Last Name"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="roles"
                    header="Roles"
                    sortable={undefined}
/>,
                  <Column
                    body={[Function]}
                    className={undefined}
                    field="email"
                    header="Email"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="emailConfirm"
                    header="Email Confirm"
                    sortable={true}
/>,
                  <Column
                    body={[Function]}
                    className="users-tag-cell"
                    field="active"
                    header="Active"
                    sortable={true}
/>,
                ],
                "className": "hidden",
                "paginator": true,
                "responsive": true,
                "rows": 10,
                "value": Array [],
              },
              "ref": [Function],
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "firstName",
                    "header": "First Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "name",
                    "header": "Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "lastName",
                    "header": "Last Name",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "roles",
                    "header": "Roles",
                    "sortable": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": undefined,
                    "field": "email",
                    "header": "Email",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "emailConfirm",
                    "header": "Email Confirm",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "6",
                  "nodeType": "class",
                  "props": Object {
                    "body": [Function],
                    "className": "users-tag-cell",
                    "field": "active",
                    "header": "Active",
                    "sortable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        false,
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
