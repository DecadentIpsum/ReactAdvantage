// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create form renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        className="edit-user-tabview"
        onTabChange={[Function]}
>
        <TabPanel
                header="User information"
                headerClassName="users-edit-form-tab-header"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-upload"
                        >
                                <label>
                                        <FileUpload
                                                auto={true}
                                                className="custom-file-upload"
                                                mode="basic"
                                                onSelect={[Function]}
                                        />
                                        <img
                                                alt="User"
                                                src="profile-default-image.svg"
                                        />
                                </label>
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                                >
                                        First Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                                >
                                        Last Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                                >
                                        Email Address 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                                >
                                        Phone Number
                                </label>
                                <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                >
                                        User Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        disabled={true}
                                        readOnly={true}
                                        value=""
                                />
                                <div
                                        className="edit-user-tip"
                                >
                                        Can not change username of admin
                                </div>
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                                >
                                        Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                                >
                                        Repeat Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header={
                        <span>
                                Roles 
                                <span
                                        className="users-edit-form-counter"
                                >
                                        3
                                </span>
                        </span>
                }
                headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-user-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-user-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "inPortal": false,
      "modal": true,
      "onHide": undefined,
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="User information"
            headerClassName="users-edit-form-tab-header"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-upload"
                        >
                                    <label>
                                                <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                />
                                                <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                />
                                    </label>
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                    >
                                                First Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                    >
                                                Last Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                    >
                                                Email Address 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                    >
                                                Phone Number
                                    </label>
                                    <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                    >
                                                User Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                disabled={true}
                                                readOnly={true}
                                                value=""
                                    />
                                    <div
                                                className="edit-user-tip"
                                    >
                                                Can not change username of admin
                                    </div>
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                    >
                                                Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                    >
                                                Repeat Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header={
                        <span>
                                    Roles 
                                    <span
                                                className="users-edit-form-counter"
                                    >
                                                3
                                    </span>
                        </span>
            }
            headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
        ],
        "className": "edit-user-tabview",
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-upload"
              >
                            <label>
                                          <FileUpload
                                                        auto={true}
                                                        className="custom-file-upload"
                                                        mode="basic"
                                                        onSelect={[Function]}
                                          />
                                          <img
                                                        alt="User"
                                                        src="profile-default-image.svg"
                                          />
                            </label>
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-first-name"
                            >
                                          First Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-user-first-name"
                                          name="firstName"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-last-name"
                            >
                                          Last Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-last-name"
                                          name="lastName"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-clear"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-email-address"
                            >
                                          Email Address 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-email-address"
                                          name="email"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-phone-number"
                            >
                                          Phone Number
                            </label>
                            <Input
                                          id="edit-user-phone-number"
                                          mask="(999) 999-9999"
                                          name="phone"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                            >
                                          User Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          disabled={true}
                                          readOnly={true}
                                          value=""
                            />
                            <div
                                          className="edit-user-tip"
                            >
                                          Can not change username of admin
                            </div>
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-set-random-password"
                                          label="Set random password"
                                          name="randomPassword"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-password"
                            >
                                          Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-password"
                                          name="password"
                                          onChange={[Function]}
                                          password={true}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-repeat-password"
                            >
                                          Repeat Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-repeat-password"
                                          name="repeatPassword"
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-change-password-on-login"
                                          label="Should change password on next login"
                                          name="changePasswordOnLogin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-activation-email"
                                          label="Send activation email"
                                          name="activationEmail"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-active"
                                          label="Active?"
                                          name="active"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": "User information",
            "headerClassName": "users-edit-form-tab-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-upload"
>
                  <label>
                                    <FileUpload
                                                      auto={true}
                                                      className="custom-file-upload"
                                                      mode="basic"
                                                      onSelect={[Function]}
                                    />
                                    <img
                                                      alt="User"
                                                      src="profile-default-image.svg"
                                    />
                  </label>
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-first-name"
                  >
                                    First Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-user-first-name"
                                    name="firstName"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-last-name"
                  >
                                    Last Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-last-name"
                                    name="lastName"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-email-address"
                  >
                                    Email Address 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-email-address"
                                    name="email"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-phone-number"
                  >
                                    Phone Number
                  </label>
                  <Input
                                    id="edit-user-phone-number"
                                    mask="(999) 999-9999"
                                    name="phone"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                  >
                                    User Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    disabled={true}
                                    readOnly={true}
                                    value=""
                  />
                  <div
                                    className="edit-user-tip"
                  >
                                    Can not change username of admin
                  </div>
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-set-random-password"
                                    label="Set random password"
                                    name="randomPassword"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                    >
                                        Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                    >
                                        Repeat Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                    />
</div>,
                ],
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-change-password-on-login"
                                    label="Should change password on next login"
                                    name="changePasswordOnLogin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-activation-email"
                                    label="Send activation email"
                                    name="activationEmail"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-active"
                                    label="Active?"
                                    name="active"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <label>
                    <FileUpload
                                        auto={true}
                                        className="custom-file-upload"
                                        mode="basic"
                                        onSelect={[Function]}
                    />
                    <img
                                        alt="User"
                                        src="profile-default-image.svg"
                    />
</label>,
                  "className": "edit-user-upload",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FileUpload
                        auto={true}
                        className="custom-file-upload"
                        mode="basic"
                        onSelect={[Function]}
/>,
                      <img
                        alt="User"
                        src="profile-default-image.svg"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "auto": true,
                        "className": "custom-file-upload",
                        "mode": "basic",
                        "onSelect": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "User",
                        "src": "profile-default-image.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                  ],
                  "type": "label",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-first-name"
>
                      First Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-user-first-name"
                      name="firstName"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "First Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-first-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "First Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-user-first-name",
                      "name": "firstName",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-last-name"
>
                      Last Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-last-name"
                      name="lastName"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Last Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-last-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Last Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-last-name",
                      "name": "lastName",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-email-address"
>
                      Email Address 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-email-address"
                      name="email"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Email Address ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-email-address",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email Address ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-email-address",
                      "name": "email",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-phone-number"
>
                      Phone Number
</label>,
                    <Input
                      id="edit-user-phone-number"
                      mask="(999) 999-9999"
                      name="phone"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Phone Number",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-phone-number",
                    },
                    "ref": null,
                    "rendered": "Phone Number",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "edit-user-phone-number",
                      "mask": "(999) 999-9999",
                      "name": "phone",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
>
                      User Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      disabled={true}
                      readOnly={true}
                      value=""
/>,
                    <div
                      className="edit-user-tip"
>
                      Can not change username of admin
</div>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "User Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                    },
                    "ref": null,
                    "rendered": Array [
                      "User Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": true,
                      "readOnly": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Can not change username of admin",
                      "className": "edit-user-tip",
                    },
                    "ref": null,
                    "rendered": "Can not change username of admin",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-set-random-password"
                    label="Set random password"
                    name="randomPassword"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-set-random-password",
                    "label": "Set random password",
                    "name": "randomPassword",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-password"
>
                      Password
</label>,
                    <Input
                      error=""
                      id="edit-user-password"
                      name="password"
                      onChange={[Function]}
                      password={true}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-password",
                      "name": "password",
                      "onChange": [Function],
                      "password": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "repeat-password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-repeat-password"
>
                      Repeat Password
</label>,
                    <Input
                      error=""
                      id="edit-user-repeat-password"
                      name="repeatPassword"
                      onChange={[Function]}
                      type="password"
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Repeat Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-repeat-password",
                    },
                    "ref": null,
                    "rendered": "Repeat Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-repeat-password",
                      "name": "repeatPassword",
                      "onChange": [Function],
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-change-password-on-login"
                    label="Should change password on next login"
                    name="changePasswordOnLogin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-change-password-on-login",
                    "label": "Should change password on next login",
                    "name": "changePasswordOnLogin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-activation-email"
                    label="Send activation email"
                    name="activationEmail"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-activation-email",
                    "label": "Send activation email",
                    "name": "activationEmail",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-active"
                    label="Active?"
                    name="active"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-active",
                    "label": "Active?",
                    "name": "active",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="1admin"
                                          label="admin"
                                          name="1admin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="2moderator"
                                          label="moderator"
                                          name="2moderator"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="3user"
                                          label="user"
                                          name="3user"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": <span>
              Roles 
              <span
                            className="users-edit-form-counter"
              >
                            3
              </span>
</span>,
            "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="1admin"
                                    label="admin"
                                    name="1admin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="2moderator"
                                    label="moderator"
                                    name="2moderator"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="3user"
                                    label="user"
                                    name="3user"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1admin",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="1admin"
                    label="admin"
                    name="1admin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "1admin",
                    "label": "admin",
                    "name": "1admin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2moderator",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="2moderator"
                    label="moderator"
                    name="2moderator"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "2moderator",
                    "label": "moderator",
                    "name": "2moderator",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "3user",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="3user"
                    label="user"
                    name="3user"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "3user",
                    "label": "user",
                    "name": "3user",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          className="edit-user-tabview"
          onTabChange={[Function]}
>
          <TabPanel
                    header="User information"
                    headerClassName="users-edit-form-tab-header"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-upload"
                              >
                                        <label>
                                                  <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                  />
                                                  <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                  />
                                        </label>
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-first-name"
                                        >
                                                  First Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-user-first-name"
                                                  name="firstName"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-last-name"
                                        >
                                                  Last Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-last-name"
                                                  name="lastName"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-email-address"
                                        >
                                                  Email Address 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-email-address"
                                                  name="email"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-phone-number"
                                        >
                                                  Phone Number
                                        </label>
                                        <Input
                                                  id="edit-user-phone-number"
                                                  mask="(999) 999-9999"
                                                  name="phone"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                        >
                                                  User Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  disabled={true}
                                                  readOnly={true}
                                                  value=""
                                        />
                                        <div
                                                  className="edit-user-tip"
                                        >
                                                  Can not change username of admin
                                        </div>
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-set-random-password"
                                                  label="Set random password"
                                                  name="randomPassword"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-password"
                                        >
                                                  Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-password"
                                                  name="password"
                                                  onChange={[Function]}
                                                  password={true}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-repeat-password"
                                        >
                                                  Repeat Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-repeat-password"
                                                  name="repeatPassword"
                                                  onChange={[Function]}
                                                  type="password"
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-change-password-on-login"
                                                  label="Should change password on next login"
                                                  name="changePasswordOnLogin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-activation-email"
                                                  label="Send activation email"
                                                  name="activationEmail"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-active"
                                                  label="Active?"
                                                  name="active"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header={
                              <span>
                                        Roles 
                                        <span
                                                  className="users-edit-form-counter"
                                        >
                                                  3
                                        </span>
                              </span>
                    }
                    headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="1admin"
                                                  label="admin"
                                                  name="1admin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="2moderator"
                                                  label="moderator"
                                                  name="2moderator"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="3user"
                                                  label="user"
                                                  name="3user"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-user-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-user-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "inPortal": false,
        "modal": true,
        "onHide": undefined,
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="User information"
              headerClassName="users-edit-form-tab-header"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-upload"
                            >
                                          <label>
                                                        <FileUpload
                                                                      auto={true}
                                                                      className="custom-file-upload"
                                                                      mode="basic"
                                                                      onSelect={[Function]}
                                                        />
                                                        <img
                                                                      alt="User"
                                                                      src="profile-default-image.svg"
                                                        />
                                          </label>
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-first-name"
                                          >
                                                        First Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-user-first-name"
                                                        name="firstName"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-last-name"
                                          >
                                                        Last Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-last-name"
                                                        name="lastName"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-email-address"
                                          >
                                                        Email Address 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-email-address"
                                                        name="email"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-phone-number"
                                          >
                                                        Phone Number
                                          </label>
                                          <Input
                                                        id="edit-user-phone-number"
                                                        mask="(999) 999-9999"
                                                        name="phone"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                          >
                                                        User Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        disabled={true}
                                                        readOnly={true}
                                                        value=""
                                          />
                                          <div
                                                        className="edit-user-tip"
                                          >
                                                        Can not change username of admin
                                          </div>
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-set-random-password"
                                                        label="Set random password"
                                                        name="randomPassword"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-password"
                                          >
                                                        Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-password"
                                                        name="password"
                                                        onChange={[Function]}
                                                        password={true}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-repeat-password"
                                          >
                                                        Repeat Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-repeat-password"
                                                        name="repeatPassword"
                                                        onChange={[Function]}
                                                        type="password"
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-change-password-on-login"
                                                        label="Should change password on next login"
                                                        name="changePasswordOnLogin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-activation-email"
                                                        label="Send activation email"
                                                        name="activationEmail"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-active"
                                                        label="Active?"
                                                        name="active"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header={
                            <span>
                                          Roles 
                                          <span
                                                        className="users-edit-form-counter"
                                          >
                                                        3
                                          </span>
                            </span>
              }
              headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="1admin"
                                                        label="admin"
                                                        name="1admin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="2moderator"
                                                        label="moderator"
                                                        name="2moderator"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="3user"
                                                        label="user"
                                                        name="3user"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
          ],
          "className": "edit-user-tabview",
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-upload"
                >
                                <label>
                                                <FileUpload
                                                                auto={true}
                                                                className="custom-file-upload"
                                                                mode="basic"
                                                                onSelect={[Function]}
                                                />
                                                <img
                                                                alt="User"
                                                                src="profile-default-image.svg"
                                                />
                                </label>
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                >
                                                First Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                >
                                                Last Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                >
                                                Email Address 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                >
                                                Phone Number
                                </label>
                                <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                >
                                                User Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                disabled={true}
                                                readOnly={true}
                                                value=""
                                />
                                <div
                                                className="edit-user-tip"
                                >
                                                Can not change username of admin
                                </div>
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                >
                                                Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                >
                                                Repeat Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": "User information",
              "headerClassName": "users-edit-form-tab-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-upload"
>
                    <label>
                                        <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                        />
                                        <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                        />
                    </label>
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                    >
                                        First Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                    >
                                        Last Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                    >
                                        Email Address 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                    >
                                        Phone Number
                    </label>
                    <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                    >
                                        User Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        disabled={true}
                                        readOnly={true}
                                        value=""
                    />
                    <div
                                        className="edit-user-tip"
                    >
                                        Can not change username of admin
                    </div>
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  Array [
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-password"
                      >
                                            Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-password"
                                            name="password"
                                            onChange={[Function]}
                                            password={true}
                                            value=""
                      />
</div>,
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-repeat-password"
                      >
                                            Repeat Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-repeat-password"
                                            name="repeatPassword"
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                      />
</div>,
                  ],
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <label>
                      <FileUpload
                                            auto={true}
                                            className="custom-file-upload"
                                            mode="basic"
                                            onSelect={[Function]}
                      />
                      <img
                                            alt="User"
                                            src="profile-default-image.svg"
                      />
</label>,
                    "className": "edit-user-upload",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FileUpload
                          auto={true}
                          className="custom-file-upload"
                          mode="basic"
                          onSelect={[Function]}
/>,
                        <img
                          alt="User"
                          src="profile-default-image.svg"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "auto": true,
                          "className": "custom-file-upload",
                          "mode": "basic",
                          "onSelect": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "User",
                          "src": "profile-default-image.svg",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                    ],
                    "type": "label",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-first-name"
>
                        First Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-user-first-name"
                        name="firstName"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "First Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-first-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "First Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-user-first-name",
                        "name": "firstName",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-last-name"
>
                        Last Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-last-name"
                        name="lastName"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Last Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-last-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Last Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-last-name",
                        "name": "lastName",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-email-address"
>
                        Email Address 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-email-address"
                        name="email"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Email Address ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-email-address",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Email Address ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-email-address",
                        "name": "email",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-phone-number"
>
                        Phone Number
</label>,
                      <Input
                        id="edit-user-phone-number"
                        mask="(999) 999-9999"
                        name="phone"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Phone Number",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-phone-number",
                      },
                      "ref": null,
                      "rendered": "Phone Number",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "edit-user-phone-number",
                        "mask": "(999) 999-9999",
                        "name": "phone",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
>
                        User Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        disabled={true}
                        readOnly={true}
                        value=""
/>,
                      <div
                        className="edit-user-tip"
>
                        Can not change username of admin
</div>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "User Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                      },
                      "ref": null,
                      "rendered": Array [
                        "User Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": true,
                        "readOnly": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Can not change username of admin",
                        "className": "edit-user-tip",
                      },
                      "ref": null,
                      "rendered": "Can not change username of admin",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-set-random-password"
                      label="Set random password"
                      name="randomPassword"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-set-random-password",
                      "label": "Set random password",
                      "name": "randomPassword",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-password"
>
                        Password
</label>,
                      <Input
                        error=""
                        id="edit-user-password"
                        name="password"
                        onChange={[Function]}
                        password={true}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-password",
                      },
                      "ref": null,
                      "rendered": "Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-password",
                        "name": "password",
                        "onChange": [Function],
                        "password": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "repeat-password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-repeat-password"
>
                        Repeat Password
</label>,
                      <Input
                        error=""
                        id="edit-user-repeat-password"
                        name="repeatPassword"
                        onChange={[Function]}
                        type="password"
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Repeat Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-repeat-password",
                      },
                      "ref": null,
                      "rendered": "Repeat Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-repeat-password",
                        "name": "repeatPassword",
                        "onChange": [Function],
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-change-password-on-login"
                      label="Should change password on next login"
                      name="changePasswordOnLogin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-change-password-on-login",
                      "label": "Should change password on next login",
                      "name": "changePasswordOnLogin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-activation-email"
                      label="Send activation email"
                      name="activationEmail"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-activation-email",
                      "label": "Send activation email",
                      "name": "activationEmail",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-active"
                      label="Active?"
                      name="active"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-active",
                      "label": "Active?",
                      "name": "active",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": <span>
                Roles 
                <span
                                className="users-edit-form-counter"
                >
                                3
                </span>
</span>,
              "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1admin",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="1admin"
                      label="admin"
                      name="1admin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "1admin",
                      "label": "admin",
                      "name": "1admin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "2moderator",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="2moderator"
                      label="moderator"
                      name="2moderator"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "2moderator",
                      "label": "moderator",
                      "name": "2moderator",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "3user",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="3user"
                      label="user"
                      name="3user"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "3user",
                      "label": "user",
                      "name": "3user",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`edit form renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    user={
        Object {
            "email": "test@test.test",
            "firstName": "test",
            "lastName": "test",
            "name": "test",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        className="edit-user-tabview"
        onTabChange={[Function]}
>
        <TabPanel
                header="User information"
                headerClassName="users-edit-form-tab-header"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-upload"
                        >
                                <label>
                                        <FileUpload
                                                auto={true}
                                                className="custom-file-upload"
                                                mode="basic"
                                                onSelect={[Function]}
                                        />
                                        <img
                                                alt="User"
                                                src="profile-default-image.svg"
                                        />
                                </label>
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                                >
                                        First Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value="test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                                >
                                        Last Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value="test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                                >
                                        Email Address 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value="test@test.test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                                >
                                        Phone Number
                                </label>
                                <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                >
                                        User Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        disabled={true}
                                        readOnly={true}
                                        value="test"
                                />
                                <div
                                        className="edit-user-tip"
                                >
                                        Can not change username of admin
                                </div>
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                                >
                                        Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                                >
                                        Repeat Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header={
                        <span>
                                Roles 
                                <span
                                        className="users-edit-form-counter"
                                >
                                        3
                                </span>
                        </span>
                }
                headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-user-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-user-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "inPortal": false,
      "modal": true,
      "onHide": undefined,
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="User information"
            headerClassName="users-edit-form-tab-header"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-upload"
                        >
                                    <label>
                                                <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                />
                                                <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                />
                                    </label>
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                    >
                                                First Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value="test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                    >
                                                Last Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value="test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                    >
                                                Email Address 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value="test@test.test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                    >
                                                Phone Number
                                    </label>
                                    <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                    >
                                                User Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                disabled={true}
                                                readOnly={true}
                                                value="test"
                                    />
                                    <div
                                                className="edit-user-tip"
                                    >
                                                Can not change username of admin
                                    </div>
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                    >
                                                Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                    >
                                                Repeat Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header={
                        <span>
                                    Roles 
                                    <span
                                                className="users-edit-form-counter"
                                    >
                                                3
                                    </span>
                        </span>
            }
            headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
        ],
        "className": "edit-user-tabview",
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-upload"
              >
                            <label>
                                          <FileUpload
                                                        auto={true}
                                                        className="custom-file-upload"
                                                        mode="basic"
                                                        onSelect={[Function]}
                                          />
                                          <img
                                                        alt="User"
                                                        src="profile-default-image.svg"
                                          />
                            </label>
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-first-name"
                            >
                                          First Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-user-first-name"
                                          name="firstName"
                                          onChange={[Function]}
                                          value="test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-last-name"
                            >
                                          Last Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-last-name"
                                          name="lastName"
                                          onChange={[Function]}
                                          value="test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-clear"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-email-address"
                            >
                                          Email Address 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-email-address"
                                          name="email"
                                          onChange={[Function]}
                                          value="test@test.test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-phone-number"
                            >
                                          Phone Number
                            </label>
                            <Input
                                          id="edit-user-phone-number"
                                          mask="(999) 999-9999"
                                          name="phone"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                            >
                                          User Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          disabled={true}
                                          readOnly={true}
                                          value="test"
                            />
                            <div
                                          className="edit-user-tip"
                            >
                                          Can not change username of admin
                            </div>
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-set-random-password"
                                          label="Set random password"
                                          name="randomPassword"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-password"
                            >
                                          Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-password"
                                          name="password"
                                          onChange={[Function]}
                                          password={true}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-repeat-password"
                            >
                                          Repeat Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-repeat-password"
                                          name="repeatPassword"
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-change-password-on-login"
                                          label="Should change password on next login"
                                          name="changePasswordOnLogin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-activation-email"
                                          label="Send activation email"
                                          name="activationEmail"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-active"
                                          label="Active?"
                                          name="active"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": "User information",
            "headerClassName": "users-edit-form-tab-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-upload"
>
                  <label>
                                    <FileUpload
                                                      auto={true}
                                                      className="custom-file-upload"
                                                      mode="basic"
                                                      onSelect={[Function]}
                                    />
                                    <img
                                                      alt="User"
                                                      src="profile-default-image.svg"
                                    />
                  </label>
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-first-name"
                  >
                                    First Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-user-first-name"
                                    name="firstName"
                                    onChange={[Function]}
                                    value="test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-last-name"
                  >
                                    Last Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-last-name"
                                    name="lastName"
                                    onChange={[Function]}
                                    value="test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-email-address"
                  >
                                    Email Address 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-email-address"
                                    name="email"
                                    onChange={[Function]}
                                    value="test@test.test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-phone-number"
                  >
                                    Phone Number
                  </label>
                  <Input
                                    id="edit-user-phone-number"
                                    mask="(999) 999-9999"
                                    name="phone"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                  >
                                    User Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    disabled={true}
                                    readOnly={true}
                                    value="test"
                  />
                  <div
                                    className="edit-user-tip"
                  >
                                    Can not change username of admin
                  </div>
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-set-random-password"
                                    label="Set random password"
                                    name="randomPassword"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                    >
                                        Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                    >
                                        Repeat Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                    />
</div>,
                ],
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-change-password-on-login"
                                    label="Should change password on next login"
                                    name="changePasswordOnLogin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-activation-email"
                                    label="Send activation email"
                                    name="activationEmail"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-active"
                                    label="Active?"
                                    name="active"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <label>
                    <FileUpload
                                        auto={true}
                                        className="custom-file-upload"
                                        mode="basic"
                                        onSelect={[Function]}
                    />
                    <img
                                        alt="User"
                                        src="profile-default-image.svg"
                    />
</label>,
                  "className": "edit-user-upload",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FileUpload
                        auto={true}
                        className="custom-file-upload"
                        mode="basic"
                        onSelect={[Function]}
/>,
                      <img
                        alt="User"
                        src="profile-default-image.svg"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "auto": true,
                        "className": "custom-file-upload",
                        "mode": "basic",
                        "onSelect": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "User",
                        "src": "profile-default-image.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                  ],
                  "type": "label",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-first-name"
>
                      First Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-user-first-name"
                      name="firstName"
                      onChange={[Function]}
                      value="test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "First Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-first-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "First Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-user-first-name",
                      "name": "firstName",
                      "onChange": [Function],
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-last-name"
>
                      Last Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-last-name"
                      name="lastName"
                      onChange={[Function]}
                      value="test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Last Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-last-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Last Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-last-name",
                      "name": "lastName",
                      "onChange": [Function],
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-email-address"
>
                      Email Address 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-email-address"
                      name="email"
                      onChange={[Function]}
                      value="test@test.test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Email Address ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-email-address",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email Address ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-email-address",
                      "name": "email",
                      "onChange": [Function],
                      "value": "test@test.test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-phone-number"
>
                      Phone Number
</label>,
                    <Input
                      id="edit-user-phone-number"
                      mask="(999) 999-9999"
                      name="phone"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Phone Number",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-phone-number",
                    },
                    "ref": null,
                    "rendered": "Phone Number",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "edit-user-phone-number",
                      "mask": "(999) 999-9999",
                      "name": "phone",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
>
                      User Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      disabled={true}
                      readOnly={true}
                      value="test"
/>,
                    <div
                      className="edit-user-tip"
>
                      Can not change username of admin
</div>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "User Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                    },
                    "ref": null,
                    "rendered": Array [
                      "User Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": true,
                      "readOnly": true,
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Can not change username of admin",
                      "className": "edit-user-tip",
                    },
                    "ref": null,
                    "rendered": "Can not change username of admin",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-set-random-password"
                    label="Set random password"
                    name="randomPassword"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-set-random-password",
                    "label": "Set random password",
                    "name": "randomPassword",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-password"
>
                      Password
</label>,
                    <Input
                      error=""
                      id="edit-user-password"
                      name="password"
                      onChange={[Function]}
                      password={true}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-password",
                      "name": "password",
                      "onChange": [Function],
                      "password": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "repeat-password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-repeat-password"
>
                      Repeat Password
</label>,
                    <Input
                      error=""
                      id="edit-user-repeat-password"
                      name="repeatPassword"
                      onChange={[Function]}
                      type="password"
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Repeat Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-repeat-password",
                    },
                    "ref": null,
                    "rendered": "Repeat Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-repeat-password",
                      "name": "repeatPassword",
                      "onChange": [Function],
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-change-password-on-login"
                    label="Should change password on next login"
                    name="changePasswordOnLogin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-change-password-on-login",
                    "label": "Should change password on next login",
                    "name": "changePasswordOnLogin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-activation-email"
                    label="Send activation email"
                    name="activationEmail"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-activation-email",
                    "label": "Send activation email",
                    "name": "activationEmail",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-active"
                    label="Active?"
                    name="active"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-active",
                    "label": "Active?",
                    "name": "active",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="1admin"
                                          label="admin"
                                          name="1admin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="2moderator"
                                          label="moderator"
                                          name="2moderator"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="3user"
                                          label="user"
                                          name="3user"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": <span>
              Roles 
              <span
                            className="users-edit-form-counter"
              >
                            3
              </span>
</span>,
            "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="1admin"
                                    label="admin"
                                    name="1admin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="2moderator"
                                    label="moderator"
                                    name="2moderator"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="3user"
                                    label="user"
                                    name="3user"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1admin",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="1admin"
                    label="admin"
                    name="1admin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "1admin",
                    "label": "admin",
                    "name": "1admin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2moderator",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="2moderator"
                    label="moderator"
                    name="2moderator"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "2moderator",
                    "label": "moderator",
                    "name": "2moderator",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "3user",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="3user"
                    label="user"
                    name="3user"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "3user",
                    "label": "user",
                    "name": "3user",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          className="edit-user-tabview"
          onTabChange={[Function]}
>
          <TabPanel
                    header="User information"
                    headerClassName="users-edit-form-tab-header"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-upload"
                              >
                                        <label>
                                                  <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                  />
                                                  <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                  />
                                        </label>
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-first-name"
                                        >
                                                  First Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-user-first-name"
                                                  name="firstName"
                                                  onChange={[Function]}
                                                  value="test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-last-name"
                                        >
                                                  Last Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-last-name"
                                                  name="lastName"
                                                  onChange={[Function]}
                                                  value="test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-email-address"
                                        >
                                                  Email Address 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-email-address"
                                                  name="email"
                                                  onChange={[Function]}
                                                  value="test@test.test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-phone-number"
                                        >
                                                  Phone Number
                                        </label>
                                        <Input
                                                  id="edit-user-phone-number"
                                                  mask="(999) 999-9999"
                                                  name="phone"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                        >
                                                  User Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  disabled={true}
                                                  readOnly={true}
                                                  value="test"
                                        />
                                        <div
                                                  className="edit-user-tip"
                                        >
                                                  Can not change username of admin
                                        </div>
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-set-random-password"
                                                  label="Set random password"
                                                  name="randomPassword"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-password"
                                        >
                                                  Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-password"
                                                  name="password"
                                                  onChange={[Function]}
                                                  password={true}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-repeat-password"
                                        >
                                                  Repeat Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-repeat-password"
                                                  name="repeatPassword"
                                                  onChange={[Function]}
                                                  type="password"
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-change-password-on-login"
                                                  label="Should change password on next login"
                                                  name="changePasswordOnLogin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-activation-email"
                                                  label="Send activation email"
                                                  name="activationEmail"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-active"
                                                  label="Active?"
                                                  name="active"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header={
                              <span>
                                        Roles 
                                        <span
                                                  className="users-edit-form-counter"
                                        >
                                                  3
                                        </span>
                              </span>
                    }
                    headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="1admin"
                                                  label="admin"
                                                  name="1admin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="2moderator"
                                                  label="moderator"
                                                  name="2moderator"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="3user"
                                                  label="user"
                                                  name="3user"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-user-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-user-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "inPortal": false,
        "modal": true,
        "onHide": undefined,
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="User information"
              headerClassName="users-edit-form-tab-header"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-upload"
                            >
                                          <label>
                                                        <FileUpload
                                                                      auto={true}
                                                                      className="custom-file-upload"
                                                                      mode="basic"
                                                                      onSelect={[Function]}
                                                        />
                                                        <img
                                                                      alt="User"
                                                                      src="profile-default-image.svg"
                                                        />
                                          </label>
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-first-name"
                                          >
                                                        First Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-user-first-name"
                                                        name="firstName"
                                                        onChange={[Function]}
                                                        value="test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-last-name"
                                          >
                                                        Last Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-last-name"
                                                        name="lastName"
                                                        onChange={[Function]}
                                                        value="test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-email-address"
                                          >
                                                        Email Address 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-email-address"
                                                        name="email"
                                                        onChange={[Function]}
                                                        value="test@test.test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-phone-number"
                                          >
                                                        Phone Number
                                          </label>
                                          <Input
                                                        id="edit-user-phone-number"
                                                        mask="(999) 999-9999"
                                                        name="phone"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                          >
                                                        User Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        disabled={true}
                                                        readOnly={true}
                                                        value="test"
                                          />
                                          <div
                                                        className="edit-user-tip"
                                          >
                                                        Can not change username of admin
                                          </div>
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-set-random-password"
                                                        label="Set random password"
                                                        name="randomPassword"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-password"
                                          >
                                                        Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-password"
                                                        name="password"
                                                        onChange={[Function]}
                                                        password={true}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-repeat-password"
                                          >
                                                        Repeat Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-repeat-password"
                                                        name="repeatPassword"
                                                        onChange={[Function]}
                                                        type="password"
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-change-password-on-login"
                                                        label="Should change password on next login"
                                                        name="changePasswordOnLogin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-activation-email"
                                                        label="Send activation email"
                                                        name="activationEmail"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-active"
                                                        label="Active?"
                                                        name="active"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header={
                            <span>
                                          Roles 
                                          <span
                                                        className="users-edit-form-counter"
                                          >
                                                        3
                                          </span>
                            </span>
              }
              headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="1admin"
                                                        label="admin"
                                                        name="1admin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="2moderator"
                                                        label="moderator"
                                                        name="2moderator"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="3user"
                                                        label="user"
                                                        name="3user"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
          ],
          "className": "edit-user-tabview",
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-upload"
                >
                                <label>
                                                <FileUpload
                                                                auto={true}
                                                                className="custom-file-upload"
                                                                mode="basic"
                                                                onSelect={[Function]}
                                                />
                                                <img
                                                                alt="User"
                                                                src="profile-default-image.svg"
                                                />
                                </label>
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                >
                                                First Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value="test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                >
                                                Last Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value="test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                >
                                                Email Address 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value="test@test.test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                >
                                                Phone Number
                                </label>
                                <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                >
                                                User Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                disabled={true}
                                                readOnly={true}
                                                value="test"
                                />
                                <div
                                                className="edit-user-tip"
                                >
                                                Can not change username of admin
                                </div>
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                >
                                                Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                >
                                                Repeat Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": "User information",
              "headerClassName": "users-edit-form-tab-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-upload"
>
                    <label>
                                        <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                        />
                                        <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                        />
                    </label>
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                    >
                                        First Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value="test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                    >
                                        Last Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value="test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                    >
                                        Email Address 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value="test@test.test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                    >
                                        Phone Number
                    </label>
                    <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                    >
                                        User Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        disabled={true}
                                        readOnly={true}
                                        value="test"
                    />
                    <div
                                        className="edit-user-tip"
                    >
                                        Can not change username of admin
                    </div>
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  Array [
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-password"
                      >
                                            Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-password"
                                            name="password"
                                            onChange={[Function]}
                                            password={true}
                                            value=""
                      />
</div>,
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-repeat-password"
                      >
                                            Repeat Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-repeat-password"
                                            name="repeatPassword"
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                      />
</div>,
                  ],
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <label>
                      <FileUpload
                                            auto={true}
                                            className="custom-file-upload"
                                            mode="basic"
                                            onSelect={[Function]}
                      />
                      <img
                                            alt="User"
                                            src="profile-default-image.svg"
                      />
</label>,
                    "className": "edit-user-upload",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FileUpload
                          auto={true}
                          className="custom-file-upload"
                          mode="basic"
                          onSelect={[Function]}
/>,
                        <img
                          alt="User"
                          src="profile-default-image.svg"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "auto": true,
                          "className": "custom-file-upload",
                          "mode": "basic",
                          "onSelect": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "User",
                          "src": "profile-default-image.svg",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                    ],
                    "type": "label",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-first-name"
>
                        First Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-user-first-name"
                        name="firstName"
                        onChange={[Function]}
                        value="test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "First Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-first-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "First Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-user-first-name",
                        "name": "firstName",
                        "onChange": [Function],
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-last-name"
>
                        Last Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-last-name"
                        name="lastName"
                        onChange={[Function]}
                        value="test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Last Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-last-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Last Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-last-name",
                        "name": "lastName",
                        "onChange": [Function],
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-email-address"
>
                        Email Address 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-email-address"
                        name="email"
                        onChange={[Function]}
                        value="test@test.test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Email Address ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-email-address",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Email Address ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-email-address",
                        "name": "email",
                        "onChange": [Function],
                        "value": "test@test.test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-phone-number"
>
                        Phone Number
</label>,
                      <Input
                        id="edit-user-phone-number"
                        mask="(999) 999-9999"
                        name="phone"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Phone Number",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-phone-number",
                      },
                      "ref": null,
                      "rendered": "Phone Number",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "edit-user-phone-number",
                        "mask": "(999) 999-9999",
                        "name": "phone",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
>
                        User Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        disabled={true}
                        readOnly={true}
                        value="test"
/>,
                      <div
                        className="edit-user-tip"
>
                        Can not change username of admin
</div>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "User Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                      },
                      "ref": null,
                      "rendered": Array [
                        "User Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": true,
                        "readOnly": true,
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Can not change username of admin",
                        "className": "edit-user-tip",
                      },
                      "ref": null,
                      "rendered": "Can not change username of admin",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-set-random-password"
                      label="Set random password"
                      name="randomPassword"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-set-random-password",
                      "label": "Set random password",
                      "name": "randomPassword",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-password"
>
                        Password
</label>,
                      <Input
                        error=""
                        id="edit-user-password"
                        name="password"
                        onChange={[Function]}
                        password={true}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-password",
                      },
                      "ref": null,
                      "rendered": "Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-password",
                        "name": "password",
                        "onChange": [Function],
                        "password": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "repeat-password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-repeat-password"
>
                        Repeat Password
</label>,
                      <Input
                        error=""
                        id="edit-user-repeat-password"
                        name="repeatPassword"
                        onChange={[Function]}
                        type="password"
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Repeat Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-repeat-password",
                      },
                      "ref": null,
                      "rendered": "Repeat Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-repeat-password",
                        "name": "repeatPassword",
                        "onChange": [Function],
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-change-password-on-login"
                      label="Should change password on next login"
                      name="changePasswordOnLogin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-change-password-on-login",
                      "label": "Should change password on next login",
                      "name": "changePasswordOnLogin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-activation-email"
                      label="Send activation email"
                      name="activationEmail"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-activation-email",
                      "label": "Send activation email",
                      "name": "activationEmail",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-active"
                      label="Active?"
                      name="active"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-active",
                      "label": "Active?",
                      "name": "active",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": <span>
                Roles 
                <span
                                className="users-edit-form-counter"
                >
                                3
                </span>
</span>,
              "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1admin",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="1admin"
                      label="admin"
                      name="1admin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "1admin",
                      "label": "admin",
                      "name": "1admin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "2moderator",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="2moderator"
                      label="moderator"
                      name="2moderator"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "2moderator",
                      "label": "moderator",
                      "name": "2moderator",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "3user",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="3user"
                      label="user"
                      name="3user"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "3user",
                      "label": "user",
                      "name": "3user",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`form with active roles tab renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        className="edit-user-tabview"
        onTabChange={[Function]}
>
        <TabPanel
                header="User information"
                headerClassName="users-edit-form-tab-header"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-upload"
                        >
                                <label>
                                        <FileUpload
                                                auto={true}
                                                className="custom-file-upload"
                                                mode="basic"
                                                onSelect={[Function]}
                                        />
                                        <img
                                                alt="User"
                                                src="profile-default-image.svg"
                                        />
                                </label>
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                                >
                                        First Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                                >
                                        Last Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                                >
                                        Email Address 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                                >
                                        Phone Number
                                </label>
                                <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                >
                                        User Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        disabled={true}
                                        readOnly={true}
                                        value=""
                                />
                                <div
                                        className="edit-user-tip"
                                >
                                        Can not change username of admin
                                </div>
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                                >
                                        Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                                >
                                        Repeat Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header={
                        <span>
                                Roles 
                                <span
                                        className="users-edit-form-counter"
                                >
                                        3
                                </span>
                        </span>
                }
                headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-user-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-user-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "inPortal": false,
      "modal": true,
      "onHide": undefined,
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="User information"
            headerClassName="users-edit-form-tab-header"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-upload"
                        >
                                    <label>
                                                <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                />
                                                <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                />
                                    </label>
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                    >
                                                First Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                    >
                                                Last Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                    >
                                                Email Address 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                    >
                                                Phone Number
                                    </label>
                                    <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                    >
                                                User Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                disabled={true}
                                                readOnly={true}
                                                value=""
                                    />
                                    <div
                                                className="edit-user-tip"
                                    >
                                                Can not change username of admin
                                    </div>
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                    >
                                                Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                    >
                                                Repeat Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header={
                        <span>
                                    Roles 
                                    <span
                                                className="users-edit-form-counter"
                                    >
                                                3
                                    </span>
                        </span>
            }
            headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
        ],
        "className": "edit-user-tabview",
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-upload"
              >
                            <label>
                                          <FileUpload
                                                        auto={true}
                                                        className="custom-file-upload"
                                                        mode="basic"
                                                        onSelect={[Function]}
                                          />
                                          <img
                                                        alt="User"
                                                        src="profile-default-image.svg"
                                          />
                            </label>
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-first-name"
                            >
                                          First Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-user-first-name"
                                          name="firstName"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-last-name"
                            >
                                          Last Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-last-name"
                                          name="lastName"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-clear"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-email-address"
                            >
                                          Email Address 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-email-address"
                                          name="email"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-phone-number"
                            >
                                          Phone Number
                            </label>
                            <Input
                                          id="edit-user-phone-number"
                                          mask="(999) 999-9999"
                                          name="phone"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                            >
                                          User Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          disabled={true}
                                          readOnly={true}
                                          value=""
                            />
                            <div
                                          className="edit-user-tip"
                            >
                                          Can not change username of admin
                            </div>
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-set-random-password"
                                          label="Set random password"
                                          name="randomPassword"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-password"
                            >
                                          Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-password"
                                          name="password"
                                          onChange={[Function]}
                                          password={true}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-repeat-password"
                            >
                                          Repeat Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-repeat-password"
                                          name="repeatPassword"
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-change-password-on-login"
                                          label="Should change password on next login"
                                          name="changePasswordOnLogin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-activation-email"
                                          label="Send activation email"
                                          name="activationEmail"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-active"
                                          label="Active?"
                                          name="active"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": "User information",
            "headerClassName": "users-edit-form-tab-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-upload"
>
                  <label>
                                    <FileUpload
                                                      auto={true}
                                                      className="custom-file-upload"
                                                      mode="basic"
                                                      onSelect={[Function]}
                                    />
                                    <img
                                                      alt="User"
                                                      src="profile-default-image.svg"
                                    />
                  </label>
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-first-name"
                  >
                                    First Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-user-first-name"
                                    name="firstName"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-last-name"
                  >
                                    Last Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-last-name"
                                    name="lastName"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-email-address"
                  >
                                    Email Address 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-email-address"
                                    name="email"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-phone-number"
                  >
                                    Phone Number
                  </label>
                  <Input
                                    id="edit-user-phone-number"
                                    mask="(999) 999-9999"
                                    name="phone"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                  >
                                    User Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    disabled={true}
                                    readOnly={true}
                                    value=""
                  />
                  <div
                                    className="edit-user-tip"
                  >
                                    Can not change username of admin
                  </div>
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-set-random-password"
                                    label="Set random password"
                                    name="randomPassword"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                    >
                                        Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                    >
                                        Repeat Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                    />
</div>,
                ],
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-change-password-on-login"
                                    label="Should change password on next login"
                                    name="changePasswordOnLogin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-activation-email"
                                    label="Send activation email"
                                    name="activationEmail"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-active"
                                    label="Active?"
                                    name="active"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <label>
                    <FileUpload
                                        auto={true}
                                        className="custom-file-upload"
                                        mode="basic"
                                        onSelect={[Function]}
                    />
                    <img
                                        alt="User"
                                        src="profile-default-image.svg"
                    />
</label>,
                  "className": "edit-user-upload",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FileUpload
                        auto={true}
                        className="custom-file-upload"
                        mode="basic"
                        onSelect={[Function]}
/>,
                      <img
                        alt="User"
                        src="profile-default-image.svg"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "auto": true,
                        "className": "custom-file-upload",
                        "mode": "basic",
                        "onSelect": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "User",
                        "src": "profile-default-image.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                  ],
                  "type": "label",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-first-name"
>
                      First Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-user-first-name"
                      name="firstName"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "First Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-first-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "First Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-user-first-name",
                      "name": "firstName",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-last-name"
>
                      Last Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-last-name"
                      name="lastName"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Last Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-last-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Last Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-last-name",
                      "name": "lastName",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-email-address"
>
                      Email Address 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-email-address"
                      name="email"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Email Address ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-email-address",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email Address ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-email-address",
                      "name": "email",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-phone-number"
>
                      Phone Number
</label>,
                    <Input
                      id="edit-user-phone-number"
                      mask="(999) 999-9999"
                      name="phone"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Phone Number",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-phone-number",
                    },
                    "ref": null,
                    "rendered": "Phone Number",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "edit-user-phone-number",
                      "mask": "(999) 999-9999",
                      "name": "phone",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
>
                      User Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      disabled={true}
                      readOnly={true}
                      value=""
/>,
                    <div
                      className="edit-user-tip"
>
                      Can not change username of admin
</div>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "User Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                    },
                    "ref": null,
                    "rendered": Array [
                      "User Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": true,
                      "readOnly": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Can not change username of admin",
                      "className": "edit-user-tip",
                    },
                    "ref": null,
                    "rendered": "Can not change username of admin",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-set-random-password"
                    label="Set random password"
                    name="randomPassword"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-set-random-password",
                    "label": "Set random password",
                    "name": "randomPassword",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-password"
>
                      Password
</label>,
                    <Input
                      error=""
                      id="edit-user-password"
                      name="password"
                      onChange={[Function]}
                      password={true}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-password",
                      "name": "password",
                      "onChange": [Function],
                      "password": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "repeat-password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-repeat-password"
>
                      Repeat Password
</label>,
                    <Input
                      error=""
                      id="edit-user-repeat-password"
                      name="repeatPassword"
                      onChange={[Function]}
                      type="password"
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Repeat Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-repeat-password",
                    },
                    "ref": null,
                    "rendered": "Repeat Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-repeat-password",
                      "name": "repeatPassword",
                      "onChange": [Function],
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-change-password-on-login"
                    label="Should change password on next login"
                    name="changePasswordOnLogin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-change-password-on-login",
                    "label": "Should change password on next login",
                    "name": "changePasswordOnLogin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-activation-email"
                    label="Send activation email"
                    name="activationEmail"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-activation-email",
                    "label": "Send activation email",
                    "name": "activationEmail",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-active"
                    label="Active?"
                    name="active"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-active",
                    "label": "Active?",
                    "name": "active",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="1admin"
                                          label="admin"
                                          name="1admin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="2moderator"
                                          label="moderator"
                                          name="2moderator"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="3user"
                                          label="user"
                                          name="3user"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": <span>
              Roles 
              <span
                            className="users-edit-form-counter"
              >
                            3
              </span>
</span>,
            "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="1admin"
                                    label="admin"
                                    name="1admin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="2moderator"
                                    label="moderator"
                                    name="2moderator"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="3user"
                                    label="user"
                                    name="3user"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1admin",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="1admin"
                    label="admin"
                    name="1admin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "1admin",
                    "label": "admin",
                    "name": "1admin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2moderator",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="2moderator"
                    label="moderator"
                    name="2moderator"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "2moderator",
                    "label": "moderator",
                    "name": "2moderator",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "3user",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="3user"
                    label="user"
                    name="3user"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "3user",
                    "label": "user",
                    "name": "3user",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          className="edit-user-tabview"
          onTabChange={[Function]}
>
          <TabPanel
                    header="User information"
                    headerClassName="users-edit-form-tab-header"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-upload"
                              >
                                        <label>
                                                  <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                  />
                                                  <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                  />
                                        </label>
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-first-name"
                                        >
                                                  First Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-user-first-name"
                                                  name="firstName"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-last-name"
                                        >
                                                  Last Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-last-name"
                                                  name="lastName"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-email-address"
                                        >
                                                  Email Address 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-email-address"
                                                  name="email"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-phone-number"
                                        >
                                                  Phone Number
                                        </label>
                                        <Input
                                                  id="edit-user-phone-number"
                                                  mask="(999) 999-9999"
                                                  name="phone"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                        >
                                                  User Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  disabled={true}
                                                  readOnly={true}
                                                  value=""
                                        />
                                        <div
                                                  className="edit-user-tip"
                                        >
                                                  Can not change username of admin
                                        </div>
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-set-random-password"
                                                  label="Set random password"
                                                  name="randomPassword"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-password"
                                        >
                                                  Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-password"
                                                  name="password"
                                                  onChange={[Function]}
                                                  password={true}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-repeat-password"
                                        >
                                                  Repeat Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-repeat-password"
                                                  name="repeatPassword"
                                                  onChange={[Function]}
                                                  type="password"
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-change-password-on-login"
                                                  label="Should change password on next login"
                                                  name="changePasswordOnLogin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-activation-email"
                                                  label="Send activation email"
                                                  name="activationEmail"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-active"
                                                  label="Active?"
                                                  name="active"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header={
                              <span>
                                        Roles 
                                        <span
                                                  className="users-edit-form-counter"
                                        >
                                                  3
                                        </span>
                              </span>
                    }
                    headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="1admin"
                                                  label="admin"
                                                  name="1admin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="2moderator"
                                                  label="moderator"
                                                  name="2moderator"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="3user"
                                                  label="user"
                                                  name="3user"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-user-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-user-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "inPortal": false,
        "modal": true,
        "onHide": undefined,
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="User information"
              headerClassName="users-edit-form-tab-header"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-upload"
                            >
                                          <label>
                                                        <FileUpload
                                                                      auto={true}
                                                                      className="custom-file-upload"
                                                                      mode="basic"
                                                                      onSelect={[Function]}
                                                        />
                                                        <img
                                                                      alt="User"
                                                                      src="profile-default-image.svg"
                                                        />
                                          </label>
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-first-name"
                                          >
                                                        First Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-user-first-name"
                                                        name="firstName"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-last-name"
                                          >
                                                        Last Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-last-name"
                                                        name="lastName"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-email-address"
                                          >
                                                        Email Address 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-email-address"
                                                        name="email"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-phone-number"
                                          >
                                                        Phone Number
                                          </label>
                                          <Input
                                                        id="edit-user-phone-number"
                                                        mask="(999) 999-9999"
                                                        name="phone"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                          >
                                                        User Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        disabled={true}
                                                        readOnly={true}
                                                        value=""
                                          />
                                          <div
                                                        className="edit-user-tip"
                                          >
                                                        Can not change username of admin
                                          </div>
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-set-random-password"
                                                        label="Set random password"
                                                        name="randomPassword"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-password"
                                          >
                                                        Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-password"
                                                        name="password"
                                                        onChange={[Function]}
                                                        password={true}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-repeat-password"
                                          >
                                                        Repeat Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-repeat-password"
                                                        name="repeatPassword"
                                                        onChange={[Function]}
                                                        type="password"
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-change-password-on-login"
                                                        label="Should change password on next login"
                                                        name="changePasswordOnLogin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-activation-email"
                                                        label="Send activation email"
                                                        name="activationEmail"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-active"
                                                        label="Active?"
                                                        name="active"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header={
                            <span>
                                          Roles 
                                          <span
                                                        className="users-edit-form-counter"
                                          >
                                                        3
                                          </span>
                            </span>
              }
              headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="1admin"
                                                        label="admin"
                                                        name="1admin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="2moderator"
                                                        label="moderator"
                                                        name="2moderator"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="3user"
                                                        label="user"
                                                        name="3user"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
          ],
          "className": "edit-user-tabview",
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-upload"
                >
                                <label>
                                                <FileUpload
                                                                auto={true}
                                                                className="custom-file-upload"
                                                                mode="basic"
                                                                onSelect={[Function]}
                                                />
                                                <img
                                                                alt="User"
                                                                src="profile-default-image.svg"
                                                />
                                </label>
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                >
                                                First Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                >
                                                Last Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                >
                                                Email Address 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                >
                                                Phone Number
                                </label>
                                <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                >
                                                User Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                disabled={true}
                                                readOnly={true}
                                                value=""
                                />
                                <div
                                                className="edit-user-tip"
                                >
                                                Can not change username of admin
                                </div>
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                >
                                                Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                >
                                                Repeat Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": "User information",
              "headerClassName": "users-edit-form-tab-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-upload"
>
                    <label>
                                        <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                        />
                                        <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                        />
                    </label>
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                    >
                                        First Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                    >
                                        Last Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                    >
                                        Email Address 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                    >
                                        Phone Number
                    </label>
                    <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                    >
                                        User Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        disabled={true}
                                        readOnly={true}
                                        value=""
                    />
                    <div
                                        className="edit-user-tip"
                    >
                                        Can not change username of admin
                    </div>
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  Array [
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-password"
                      >
                                            Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-password"
                                            name="password"
                                            onChange={[Function]}
                                            password={true}
                                            value=""
                      />
</div>,
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-repeat-password"
                      >
                                            Repeat Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-repeat-password"
                                            name="repeatPassword"
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                      />
</div>,
                  ],
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <label>
                      <FileUpload
                                            auto={true}
                                            className="custom-file-upload"
                                            mode="basic"
                                            onSelect={[Function]}
                      />
                      <img
                                            alt="User"
                                            src="profile-default-image.svg"
                      />
</label>,
                    "className": "edit-user-upload",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FileUpload
                          auto={true}
                          className="custom-file-upload"
                          mode="basic"
                          onSelect={[Function]}
/>,
                        <img
                          alt="User"
                          src="profile-default-image.svg"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "auto": true,
                          "className": "custom-file-upload",
                          "mode": "basic",
                          "onSelect": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "User",
                          "src": "profile-default-image.svg",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                    ],
                    "type": "label",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-first-name"
>
                        First Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-user-first-name"
                        name="firstName"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "First Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-first-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "First Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-user-first-name",
                        "name": "firstName",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-last-name"
>
                        Last Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-last-name"
                        name="lastName"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Last Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-last-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Last Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-last-name",
                        "name": "lastName",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-email-address"
>
                        Email Address 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-email-address"
                        name="email"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Email Address ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-email-address",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Email Address ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-email-address",
                        "name": "email",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-phone-number"
>
                        Phone Number
</label>,
                      <Input
                        id="edit-user-phone-number"
                        mask="(999) 999-9999"
                        name="phone"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Phone Number",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-phone-number",
                      },
                      "ref": null,
                      "rendered": "Phone Number",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "edit-user-phone-number",
                        "mask": "(999) 999-9999",
                        "name": "phone",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
>
                        User Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        disabled={true}
                        readOnly={true}
                        value=""
/>,
                      <div
                        className="edit-user-tip"
>
                        Can not change username of admin
</div>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "User Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                      },
                      "ref": null,
                      "rendered": Array [
                        "User Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": true,
                        "readOnly": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Can not change username of admin",
                        "className": "edit-user-tip",
                      },
                      "ref": null,
                      "rendered": "Can not change username of admin",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-set-random-password"
                      label="Set random password"
                      name="randomPassword"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-set-random-password",
                      "label": "Set random password",
                      "name": "randomPassword",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-password"
>
                        Password
</label>,
                      <Input
                        error=""
                        id="edit-user-password"
                        name="password"
                        onChange={[Function]}
                        password={true}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-password",
                      },
                      "ref": null,
                      "rendered": "Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-password",
                        "name": "password",
                        "onChange": [Function],
                        "password": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "repeat-password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-repeat-password"
>
                        Repeat Password
</label>,
                      <Input
                        error=""
                        id="edit-user-repeat-password"
                        name="repeatPassword"
                        onChange={[Function]}
                        type="password"
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Repeat Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-repeat-password",
                      },
                      "ref": null,
                      "rendered": "Repeat Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-repeat-password",
                        "name": "repeatPassword",
                        "onChange": [Function],
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-change-password-on-login"
                      label="Should change password on next login"
                      name="changePasswordOnLogin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-change-password-on-login",
                      "label": "Should change password on next login",
                      "name": "changePasswordOnLogin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-activation-email"
                      label="Send activation email"
                      name="activationEmail"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-activation-email",
                      "label": "Send activation email",
                      "name": "activationEmail",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-active"
                      label="Active?"
                      name="active"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-active",
                      "label": "Active?",
                      "name": "active",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": <span>
                Roles 
                <span
                                className="users-edit-form-counter"
                >
                                3
                </span>
</span>,
              "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1admin",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="1admin"
                      label="admin"
                      name="1admin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "1admin",
                      "label": "admin",
                      "name": "1admin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "2moderator",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="2moderator"
                      label="moderator"
                      name="2moderator"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "2moderator",
                      "label": "moderator",
                      "name": "2moderator",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "3user",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="3user"
                      label="user"
                      name="3user"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "3user",
                      "label": "user",
                      "name": "3user",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`form with random password renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    onHide={[Function]}
    user={
        Object {
            "email": "test@test.test",
            "firstName": "test",
            "lastName": "test",
            "name": "test",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        className="edit-user-tabview"
        onTabChange={[Function]}
>
        <TabPanel
                header="User information"
                headerClassName="users-edit-form-tab-header"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-upload"
                        >
                                <label>
                                        <FileUpload
                                                auto={true}
                                                className="custom-file-upload"
                                                mode="basic"
                                                onSelect={[Function]}
                                        />
                                        <img
                                                alt="User"
                                                src="profile-default-image.svg"
                                        />
                                </label>
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                                >
                                        First Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value="test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                                >
                                        Last Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value="test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                                >
                                        Email Address 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value="test@test.test"
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                                >
                                        Phone Number
                                </label>
                                <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                >
                                        User Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        disabled={true}
                                        readOnly={true}
                                        value="test"
                                />
                                <div
                                        className="edit-user-tip"
                                >
                                        Can not change username of admin
                                </div>
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                                >
                                        Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                                >
                                        Repeat Password
                                </label>
                                <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header={
                        <span>
                                Roles 
                                <span
                                        className="users-edit-form-counter"
                                >
                                        3
                                </span>
                        </span>
                }
                headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
        >
                <form
                        className="edit-user"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                        <div
                                className="edit-user-input-wrapper"
                        >
                                <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                                />
                        </div>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-user-cancel-button"
                onClick={[Function]}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-user-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "inPortal": false,
      "modal": true,
      "onHide": [Function],
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="User information"
            headerClassName="users-edit-form-tab-header"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-upload"
                        >
                                    <label>
                                                <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                />
                                                <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                />
                                    </label>
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                    >
                                                First Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value="test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                    >
                                                Last Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value="test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                    >
                                                Email Address 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value="test@test.test"
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                    >
                                                Phone Number
                                    </label>
                                    <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                    >
                                                User Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                disabled={true}
                                                readOnly={true}
                                                value="test"
                                    />
                                    <div
                                                className="edit-user-tip"
                                    >
                                                Can not change username of admin
                                    </div>
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                    >
                                                Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                    >
                                                Repeat Password
                                    </label>
                                    <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header={
                        <span>
                                    Roles 
                                    <span
                                                className="users-edit-form-counter"
                                    >
                                                3
                                    </span>
                        </span>
            }
            headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
            <form
                        className="edit-user"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
                        <div
                                    className="edit-user-input-wrapper"
                        >
                                    <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                    />
                        </div>
            </form>
</TabPanel>,
        ],
        "className": "edit-user-tabview",
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-upload"
              >
                            <label>
                                          <FileUpload
                                                        auto={true}
                                                        className="custom-file-upload"
                                                        mode="basic"
                                                        onSelect={[Function]}
                                          />
                                          <img
                                                        alt="User"
                                                        src="profile-default-image.svg"
                                          />
                            </label>
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-first-name"
                            >
                                          First Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-user-first-name"
                                          name="firstName"
                                          onChange={[Function]}
                                          value="test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-right"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-last-name"
                            >
                                          Last Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-last-name"
                                          name="lastName"
                                          onChange={[Function]}
                                          value="test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper edit-user-input-wrapper-clear"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-email-address"
                            >
                                          Email Address 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-email-address"
                                          name="email"
                                          onChange={[Function]}
                                          value="test@test.test"
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-phone-number"
                            >
                                          Phone Number
                            </label>
                            <Input
                                          id="edit-user-phone-number"
                                          mask="(999) 999-9999"
                                          name="phone"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                            >
                                          User Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          disabled={true}
                                          readOnly={true}
                                          value="test"
                            />
                            <div
                                          className="edit-user-tip"
                            >
                                          Can not change username of admin
                            </div>
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-set-random-password"
                                          label="Set random password"
                                          name="randomPassword"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-password"
                            >
                                          Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-password"
                                          name="password"
                                          onChange={[Function]}
                                          password={true}
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <label
                                          className="edit-user-label"
                                          htmlFor="edit-user-repeat-password"
                            >
                                          Repeat Password
                            </label>
                            <Input
                                          error=""
                                          id="edit-user-repeat-password"
                                          name="repeatPassword"
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-change-password-on-login"
                                          label="Should change password on next login"
                                          name="changePasswordOnLogin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-activation-email"
                                          label="Send activation email"
                                          name="activationEmail"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-user-active"
                                          label="Active?"
                                          name="active"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": "User information",
            "headerClassName": "users-edit-form-tab-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-upload"
>
                  <label>
                                    <FileUpload
                                                      auto={true}
                                                      className="custom-file-upload"
                                                      mode="basic"
                                                      onSelect={[Function]}
                                    />
                                    <img
                                                      alt="User"
                                                      src="profile-default-image.svg"
                                    />
                  </label>
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-first-name"
                  >
                                    First Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-user-first-name"
                                    name="firstName"
                                    onChange={[Function]}
                                    value="test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-last-name"
                  >
                                    Last Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-last-name"
                                    name="lastName"
                                    onChange={[Function]}
                                    value="test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-email-address"
                  >
                                    Email Address 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    error=""
                                    id="edit-user-email-address"
                                    name="email"
                                    onChange={[Function]}
                                    value="test@test.test"
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                                    htmlFor="edit-user-phone-number"
                  >
                                    Phone Number
                  </label>
                  <Input
                                    id="edit-user-phone-number"
                                    mask="(999) 999-9999"
                                    name="phone"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <label
                                    className="edit-user-label"
                  >
                                    User Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    disabled={true}
                                    readOnly={true}
                                    value="test"
                  />
                  <div
                                    className="edit-user-tip"
                  >
                                    Can not change username of admin
                  </div>
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-set-random-password"
                                    label="Set random password"
                                    name="randomPassword"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-password"
                    >
                                        Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-password"
                                        name="password"
                                        onChange={[Function]}
                                        password={true}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-repeat-password"
                    >
                                        Repeat Password
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-repeat-password"
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        type="password"
                                        value=""
                    />
</div>,
                ],
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-change-password-on-login"
                                    label="Should change password on next login"
                                    name="changePasswordOnLogin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-activation-email"
                                    label="Send activation email"
                                    name="activationEmail"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-user-active"
                                    label="Active?"
                                    name="active"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <label>
                    <FileUpload
                                        auto={true}
                                        className="custom-file-upload"
                                        mode="basic"
                                        onSelect={[Function]}
                    />
                    <img
                                        alt="User"
                                        src="profile-default-image.svg"
                    />
</label>,
                  "className": "edit-user-upload",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FileUpload
                        auto={true}
                        className="custom-file-upload"
                        mode="basic"
                        onSelect={[Function]}
/>,
                      <img
                        alt="User"
                        src="profile-default-image.svg"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "auto": true,
                        "className": "custom-file-upload",
                        "mode": "basic",
                        "onSelect": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "User",
                        "src": "profile-default-image.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                  ],
                  "type": "label",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-first-name"
>
                      First Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-user-first-name"
                      name="firstName"
                      onChange={[Function]}
                      value="test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "First Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-first-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "First Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-user-first-name",
                      "name": "firstName",
                      "onChange": [Function],
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-last-name"
>
                      Last Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-last-name"
                      name="lastName"
                      onChange={[Function]}
                      value="test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Last Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-last-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Last Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-last-name",
                      "name": "lastName",
                      "onChange": [Function],
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-email-address"
>
                      Email Address 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      error=""
                      id="edit-user-email-address"
                      name="email"
                      onChange={[Function]}
                      value="test@test.test"
/>,
                  ],
                  "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Email Address ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-email-address",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email Address ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-email-address",
                      "name": "email",
                      "onChange": [Function],
                      "value": "test@test.test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-phone-number"
>
                      Phone Number
</label>,
                    <Input
                      id="edit-user-phone-number"
                      mask="(999) 999-9999"
                      name="phone"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Phone Number",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-phone-number",
                    },
                    "ref": null,
                    "rendered": "Phone Number",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "edit-user-phone-number",
                      "mask": "(999) 999-9999",
                      "name": "phone",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
>
                      User Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      disabled={true}
                      readOnly={true}
                      value="test"
/>,
                    <div
                      className="edit-user-tip"
>
                      Can not change username of admin
</div>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "User Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-user-label",
                    },
                    "ref": null,
                    "rendered": Array [
                      "User Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": true,
                      "readOnly": true,
                      "value": "test",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Can not change username of admin",
                      "className": "edit-user-tip",
                    },
                    "ref": null,
                    "rendered": "Can not change username of admin",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-set-random-password"
                    label="Set random password"
                    name="randomPassword"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-set-random-password",
                    "label": "Set random password",
                    "name": "randomPassword",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-password"
>
                      Password
</label>,
                    <Input
                      error=""
                      id="edit-user-password"
                      name="password"
                      onChange={[Function]}
                      password={true}
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-password",
                      "name": "password",
                      "onChange": [Function],
                      "password": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "repeat-password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-user-label"
                      htmlFor="edit-user-repeat-password"
>
                      Repeat Password
</label>,
                    <Input
                      error=""
                      id="edit-user-repeat-password"
                      name="repeatPassword"
                      onChange={[Function]}
                      type="password"
                      value=""
/>,
                  ],
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Repeat Password",
                      "className": "edit-user-label",
                      "htmlFor": "edit-user-repeat-password",
                    },
                    "ref": null,
                    "rendered": "Repeat Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "error": "",
                      "id": "edit-user-repeat-password",
                      "name": "repeatPassword",
                      "onChange": [Function],
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-change-password-on-login"
                    label="Should change password on next login"
                    name="changePasswordOnLogin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-change-password-on-login",
                    "label": "Should change password on next login",
                    "name": "changePasswordOnLogin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-activation-email"
                    label="Send activation email"
                    name="activationEmail"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-activation-email",
                    "label": "Send activation email",
                    "name": "activationEmail",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    inputId="edit-user-active"
                    label="Active?"
                    name="active"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "inputId": "edit-user-active",
                    "label": "Active?",
                    "name": "active",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-user"
              onSubmit={[Function]}
>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="1admin"
                                          label="admin"
                                          name="1admin"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="2moderator"
                                          label="moderator"
                                          name="2moderator"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
              <div
                            className="edit-user-input-wrapper"
              >
                            <Checkbox
                                          checked={false}
                                          className="edit-user-roles-checkbox"
                                          inputId="3user"
                                          label="user"
                                          name="3user"
                                          onChange={[Function]}
                                          value={false}
                            />
              </div>
</form>,
            "header": <span>
              Roles 
              <span
                            className="users-edit-form-counter"
              >
                            3
              </span>
</span>,
            "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="1admin"
                                    label="admin"
                                    name="1admin"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="2moderator"
                                    label="moderator"
                                    name="2moderator"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
                <div
                  className="edit-user-input-wrapper"
>
                  <Checkbox
                                    checked={false}
                                    className="edit-user-roles-checkbox"
                                    inputId="3user"
                                    label="user"
                                    name="3user"
                                    onChange={[Function]}
                                    value={false}
                  />
</div>,
              ],
              "className": "edit-user",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1admin",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="1admin"
                    label="admin"
                    name="1admin"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "1admin",
                    "label": "admin",
                    "name": "1admin",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2moderator",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="2moderator"
                    label="moderator"
                    name="2moderator"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "2moderator",
                    "label": "moderator",
                    "name": "2moderator",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "3user",
                "nodeType": "host",
                "props": Object {
                  "children": <Checkbox
                    checked={false}
                    className="edit-user-roles-checkbox"
                    inputId="3user"
                    label="user"
                    name="3user"
                    onChange={[Function]}
                    value={false}
/>,
                  "className": "edit-user-input-wrapper",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "className": "edit-user-roles-checkbox",
                    "inputId": "3user",
                    "label": "user",
                    "name": "3user",
                    "onChange": [Function],
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          className="edit-user-tabview"
          onTabChange={[Function]}
>
          <TabPanel
                    header="User information"
                    headerClassName="users-edit-form-tab-header"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-upload"
                              >
                                        <label>
                                                  <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                                  />
                                                  <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                                  />
                                        </label>
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-first-name"
                                        >
                                                  First Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-user-first-name"
                                                  name="firstName"
                                                  onChange={[Function]}
                                                  value="test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-right"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-last-name"
                                        >
                                                  Last Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-last-name"
                                                  name="lastName"
                                                  onChange={[Function]}
                                                  value="test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-email-address"
                                        >
                                                  Email Address 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-email-address"
                                                  name="email"
                                                  onChange={[Function]}
                                                  value="test@test.test"
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-phone-number"
                                        >
                                                  Phone Number
                                        </label>
                                        <Input
                                                  id="edit-user-phone-number"
                                                  mask="(999) 999-9999"
                                                  name="phone"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                        >
                                                  User Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  disabled={true}
                                                  readOnly={true}
                                                  value="test"
                                        />
                                        <div
                                                  className="edit-user-tip"
                                        >
                                                  Can not change username of admin
                                        </div>
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-set-random-password"
                                                  label="Set random password"
                                                  name="randomPassword"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-password"
                                        >
                                                  Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-password"
                                                  name="password"
                                                  onChange={[Function]}
                                                  password={true}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <label
                                                  className="edit-user-label"
                                                  htmlFor="edit-user-repeat-password"
                                        >
                                                  Repeat Password
                                        </label>
                                        <Input
                                                  error=""
                                                  id="edit-user-repeat-password"
                                                  name="repeatPassword"
                                                  onChange={[Function]}
                                                  type="password"
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-change-password-on-login"
                                                  label="Should change password on next login"
                                                  name="changePasswordOnLogin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-activation-email"
                                                  label="Send activation email"
                                                  name="activationEmail"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-user-active"
                                                  label="Active?"
                                                  name="active"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header={
                              <span>
                                        Roles 
                                        <span
                                                  className="users-edit-form-counter"
                                        >
                                                  3
                                        </span>
                              </span>
                    }
                    headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
          >
                    <form
                              className="edit-user"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="1admin"
                                                  label="admin"
                                                  name="1admin"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="2moderator"
                                                  label="moderator"
                                                  name="2moderator"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                              <div
                                        className="edit-user-input-wrapper"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  className="edit-user-roles-checkbox"
                                                  inputId="3user"
                                                  label="user"
                                                  name="3user"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                              </div>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-user-cancel-button"
                    onClick={[Function]}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-user-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "inPortal": false,
        "modal": true,
        "onHide": [Function],
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="User information"
              headerClassName="users-edit-form-tab-header"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-upload"
                            >
                                          <label>
                                                        <FileUpload
                                                                      auto={true}
                                                                      className="custom-file-upload"
                                                                      mode="basic"
                                                                      onSelect={[Function]}
                                                        />
                                                        <img
                                                                      alt="User"
                                                                      src="profile-default-image.svg"
                                                        />
                                          </label>
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-first-name"
                                          >
                                                        First Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-user-first-name"
                                                        name="firstName"
                                                        onChange={[Function]}
                                                        value="test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-right"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-last-name"
                                          >
                                                        Last Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-last-name"
                                                        name="lastName"
                                                        onChange={[Function]}
                                                        value="test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-email-address"
                                          >
                                                        Email Address 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-email-address"
                                                        name="email"
                                                        onChange={[Function]}
                                                        value="test@test.test"
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-phone-number"
                                          >
                                                        Phone Number
                                          </label>
                                          <Input
                                                        id="edit-user-phone-number"
                                                        mask="(999) 999-9999"
                                                        name="phone"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                          >
                                                        User Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        disabled={true}
                                                        readOnly={true}
                                                        value="test"
                                          />
                                          <div
                                                        className="edit-user-tip"
                                          >
                                                        Can not change username of admin
                                          </div>
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-set-random-password"
                                                        label="Set random password"
                                                        name="randomPassword"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-password"
                                          >
                                                        Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-password"
                                                        name="password"
                                                        onChange={[Function]}
                                                        password={true}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <label
                                                        className="edit-user-label"
                                                        htmlFor="edit-user-repeat-password"
                                          >
                                                        Repeat Password
                                          </label>
                                          <Input
                                                        error=""
                                                        id="edit-user-repeat-password"
                                                        name="repeatPassword"
                                                        onChange={[Function]}
                                                        type="password"
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-change-password-on-login"
                                                        label="Should change password on next login"
                                                        name="changePasswordOnLogin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-activation-email"
                                                        label="Send activation email"
                                                        name="activationEmail"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-user-active"
                                                        label="Active?"
                                                        name="active"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header={
                            <span>
                                          Roles 
                                          <span
                                                        className="users-edit-form-counter"
                                          >
                                                        3
                                          </span>
                            </span>
              }
              headerClassName="users-edit-form-tab-header users-edit-form-tab-header-counter"
>
              <form
                            className="edit-user"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="1admin"
                                                        label="admin"
                                                        name="1admin"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="2moderator"
                                                        label="moderator"
                                                        name="2moderator"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
                            <div
                                          className="edit-user-input-wrapper"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        className="edit-user-roles-checkbox"
                                                        inputId="3user"
                                                        label="user"
                                                        name="3user"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                            </div>
              </form>
</TabPanel>,
          ],
          "className": "edit-user-tabview",
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-upload"
                >
                                <label>
                                                <FileUpload
                                                                auto={true}
                                                                className="custom-file-upload"
                                                                mode="basic"
                                                                onSelect={[Function]}
                                                />
                                                <img
                                                                alt="User"
                                                                src="profile-default-image.svg"
                                                />
                                </label>
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-first-name"
                                >
                                                First Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-user-first-name"
                                                name="firstName"
                                                onChange={[Function]}
                                                value="test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-right"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-last-name"
                                >
                                                Last Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-last-name"
                                                name="lastName"
                                                onChange={[Function]}
                                                value="test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper edit-user-input-wrapper-clear"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-email-address"
                                >
                                                Email Address 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-email-address"
                                                name="email"
                                                onChange={[Function]}
                                                value="test@test.test"
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-phone-number"
                                >
                                                Phone Number
                                </label>
                                <Input
                                                id="edit-user-phone-number"
                                                mask="(999) 999-9999"
                                                name="phone"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                >
                                                User Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                disabled={true}
                                                readOnly={true}
                                                value="test"
                                />
                                <div
                                                className="edit-user-tip"
                                >
                                                Can not change username of admin
                                </div>
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-set-random-password"
                                                label="Set random password"
                                                name="randomPassword"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-password"
                                >
                                                Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-password"
                                                name="password"
                                                onChange={[Function]}
                                                password={true}
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <label
                                                className="edit-user-label"
                                                htmlFor="edit-user-repeat-password"
                                >
                                                Repeat Password
                                </label>
                                <Input
                                                error=""
                                                id="edit-user-repeat-password"
                                                name="repeatPassword"
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-change-password-on-login"
                                                label="Should change password on next login"
                                                name="changePasswordOnLogin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-activation-email"
                                                label="Send activation email"
                                                name="activationEmail"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-user-active"
                                                label="Active?"
                                                name="active"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": "User information",
              "headerClassName": "users-edit-form-tab-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-upload"
>
                    <label>
                                        <FileUpload
                                                            auto={true}
                                                            className="custom-file-upload"
                                                            mode="basic"
                                                            onSelect={[Function]}
                                        />
                                        <img
                                                            alt="User"
                                                            src="profile-default-image.svg"
                                        />
                    </label>
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-first-name"
                    >
                                        First Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-user-first-name"
                                        name="firstName"
                                        onChange={[Function]}
                                        value="test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-right"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-last-name"
                    >
                                        Last Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-last-name"
                                        name="lastName"
                                        onChange={[Function]}
                                        value="test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper edit-user-input-wrapper-clear"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-email-address"
                    >
                                        Email Address 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        error=""
                                        id="edit-user-email-address"
                                        name="email"
                                        onChange={[Function]}
                                        value="test@test.test"
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                                        htmlFor="edit-user-phone-number"
                    >
                                        Phone Number
                    </label>
                    <Input
                                        id="edit-user-phone-number"
                                        mask="(999) 999-9999"
                                        name="phone"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <label
                                        className="edit-user-label"
                    >
                                        User Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        disabled={true}
                                        readOnly={true}
                                        value="test"
                    />
                    <div
                                        className="edit-user-tip"
                    >
                                        Can not change username of admin
                    </div>
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-set-random-password"
                                        label="Set random password"
                                        name="randomPassword"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  Array [
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-password"
                      >
                                            Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-password"
                                            name="password"
                                            onChange={[Function]}
                                            password={true}
                                            value=""
                      />
</div>,
                    <div
                      className="edit-user-input-wrapper"
>
                      <label
                                            className="edit-user-label"
                                            htmlFor="edit-user-repeat-password"
                      >
                                            Repeat Password
                      </label>
                      <Input
                                            error=""
                                            id="edit-user-repeat-password"
                                            name="repeatPassword"
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                      />
</div>,
                  ],
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-change-password-on-login"
                                        label="Should change password on next login"
                                        name="changePasswordOnLogin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-activation-email"
                                        label="Send activation email"
                                        name="activationEmail"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-user-active"
                                        label="Active?"
                                        name="active"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <label>
                      <FileUpload
                                            auto={true}
                                            className="custom-file-upload"
                                            mode="basic"
                                            onSelect={[Function]}
                      />
                      <img
                                            alt="User"
                                            src="profile-default-image.svg"
                      />
</label>,
                    "className": "edit-user-upload",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FileUpload
                          auto={true}
                          className="custom-file-upload"
                          mode="basic"
                          onSelect={[Function]}
/>,
                        <img
                          alt="User"
                          src="profile-default-image.svg"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "auto": true,
                          "className": "custom-file-upload",
                          "mode": "basic",
                          "onSelect": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "User",
                          "src": "profile-default-image.svg",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                    ],
                    "type": "label",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-first-name"
>
                        First Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-user-first-name"
                        name="firstName"
                        onChange={[Function]}
                        value="test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "First Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-first-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "First Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-user-first-name",
                        "name": "firstName",
                        "onChange": [Function],
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-last-name"
>
                        Last Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-last-name"
                        name="lastName"
                        onChange={[Function]}
                        value="test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-right",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Last Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-last-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Last Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-last-name",
                        "name": "lastName",
                        "onChange": [Function],
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-email-address"
>
                        Email Address 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        error=""
                        id="edit-user-email-address"
                        name="email"
                        onChange={[Function]}
                        value="test@test.test"
/>,
                    ],
                    "className": "edit-user-input-wrapper edit-user-input-wrapper-clear",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Email Address ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-email-address",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Email Address ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-email-address",
                        "name": "email",
                        "onChange": [Function],
                        "value": "test@test.test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-phone-number"
>
                        Phone Number
</label>,
                      <Input
                        id="edit-user-phone-number"
                        mask="(999) 999-9999"
                        name="phone"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Phone Number",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-phone-number",
                      },
                      "ref": null,
                      "rendered": "Phone Number",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "edit-user-phone-number",
                        "mask": "(999) 999-9999",
                        "name": "phone",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
>
                        User Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        disabled={true}
                        readOnly={true}
                        value="test"
/>,
                      <div
                        className="edit-user-tip"
>
                        Can not change username of admin
</div>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "User Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-user-label",
                      },
                      "ref": null,
                      "rendered": Array [
                        "User Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": true,
                        "readOnly": true,
                        "value": "test",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Can not change username of admin",
                        "className": "edit-user-tip",
                      },
                      "ref": null,
                      "rendered": "Can not change username of admin",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-set-random-password"
                      label="Set random password"
                      name="randomPassword"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-set-random-password",
                      "label": "Set random password",
                      "name": "randomPassword",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-password"
>
                        Password
</label>,
                      <Input
                        error=""
                        id="edit-user-password"
                        name="password"
                        onChange={[Function]}
                        password={true}
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-password",
                      },
                      "ref": null,
                      "rendered": "Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-password",
                        "name": "password",
                        "onChange": [Function],
                        "password": true,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "repeat-password",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-user-label"
                        htmlFor="edit-user-repeat-password"
>
                        Repeat Password
</label>,
                      <Input
                        error=""
                        id="edit-user-repeat-password"
                        name="repeatPassword"
                        onChange={[Function]}
                        type="password"
                        value=""
/>,
                    ],
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Repeat Password",
                        "className": "edit-user-label",
                        "htmlFor": "edit-user-repeat-password",
                      },
                      "ref": null,
                      "rendered": "Repeat Password",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "error": "",
                        "id": "edit-user-repeat-password",
                        "name": "repeatPassword",
                        "onChange": [Function],
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-change-password-on-login"
                      label="Should change password on next login"
                      name="changePasswordOnLogin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-change-password-on-login",
                      "label": "Should change password on next login",
                      "name": "changePasswordOnLogin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-activation-email"
                      label="Send activation email"
                      name="activationEmail"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-activation-email",
                      "label": "Send activation email",
                      "name": "activationEmail",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      inputId="edit-user-active"
                      label="Active?"
                      name="active"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-user-active",
                      "label": "Active?",
                      "name": "active",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-user"
                onSubmit={[Function]}
>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="1admin"
                                                label="admin"
                                                name="1admin"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="2moderator"
                                                label="moderator"
                                                name="2moderator"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
                <div
                                className="edit-user-input-wrapper"
                >
                                <Checkbox
                                                checked={false}
                                                className="edit-user-roles-checkbox"
                                                inputId="3user"
                                                label="user"
                                                name="3user"
                                                onChange={[Function]}
                                                value={false}
                                />
                </div>
</form>,
              "header": <span>
                Roles 
                <span
                                className="users-edit-form-counter"
                >
                                3
                </span>
</span>,
              "headerClassName": "users-edit-form-tab-header users-edit-form-tab-header-counter",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="1admin"
                                        label="admin"
                                        name="1admin"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="2moderator"
                                        label="moderator"
                                        name="2moderator"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                  <div
                    className="edit-user-input-wrapper"
>
                    <Checkbox
                                        checked={false}
                                        className="edit-user-roles-checkbox"
                                        inputId="3user"
                                        label="user"
                                        name="3user"
                                        onChange={[Function]}
                                        value={false}
                    />
</div>,
                ],
                "className": "edit-user",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1admin",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="1admin"
                      label="admin"
                      name="1admin"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "1admin",
                      "label": "admin",
                      "name": "1admin",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "2moderator",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="2moderator"
                      label="moderator"
                      name="2moderator"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "2moderator",
                      "label": "moderator",
                      "name": "2moderator",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "3user",
                  "nodeType": "host",
                  "props": Object {
                    "children": <Checkbox
                      checked={false}
                      className="edit-user-roles-checkbox"
                      inputId="3user"
                      label="user"
                      name="3user"
                      onChange={[Function]}
                      value={false}
/>,
                    "className": "edit-user-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "className": "edit-user-roles-checkbox",
                      "inputId": "3user",
                      "label": "user",
                      "name": "3user",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
