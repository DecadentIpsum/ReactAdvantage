// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    tenant={
        Object {
            "creationTime": "1529242113",
            "edition": "Premium",
            "id": "1",
            "name": "Default",
            "tenantName": "Default",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <form
        className="edit-tenant"
        onSubmit={[Function]}
>
        <div
                className="edit-tenant-input-wrapper"
        >
                <label
                        className="edit-tenant-label"
                        htmlFor="edit-tenant-name"
                >
                        Name 
                        <sup>
                                *
                        </sup>
                </label>
                <Input
                        autoFocus={true}
                        error=""
                        id="edit-tenant-name"
                        name="name"
                        onChange={[Function]}
                        value="Default"
                />
        </div>
        <div
                className="edit-tenant-input-wrapper"
        >
                <label
                        className="edit-tenant-label"
                >
                        Edition
                </label>
                <Dropdown
                        onChange={[Function]}
                        options={
                                Array [
                                        Object {
                                          "label": "Standard",
                                          "value": "Standard",
                                        },
                                        Object {
                                          "label": "Pro",
                                          "value": "Pro",
                                        },
                                      ]
                        }
                        value="Standard"
                />
        </div>
        <div
                className="edit-tenant-input-wrapper"
        >
                <label
                        className="edit-tenant-label"
                >
                        Subscription end date 
                        <sup>
                                *
                        </sup>
                </label>
                <Calendar
                        minDate={1970-01-18T16:48:12.113Z}
                        onChange={[Function]}
                        value={1970-01-18T16:47:22.113Z}
                />
        </div>
        <div
                className="edit-tenant-input-wrapper"
        >
                <Checkbox
                        checked={false}
                        inputId="edit-tenant-active"
                        label="Active"
                        name="active"
                        onChange={[Function]}
                        value={false}
                />
        </div>
</form>,
      "footer": <div>
        <Button
                className="edit-tenant-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-tenant-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "header": "Edit tenant: Default",
      "inPortal": false,
      "modal": true,
      "onHide": undefined,
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="edit-tenant-input-wrapper"
>
            <label
                        className="edit-tenant-label"
                        htmlFor="edit-tenant-name"
            >
                        Name 
                        <sup>
                                    *
                        </sup>
            </label>
            <Input
                        autoFocus={true}
                        error=""
                        id="edit-tenant-name"
                        name="name"
                        onChange={[Function]}
                        value="Default"
            />
</div>,
          <div
            className="edit-tenant-input-wrapper"
>
            <label
                        className="edit-tenant-label"
            >
                        Edition
            </label>
            <Dropdown
                        onChange={[Function]}
                        options={
                                    Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": "Standard",
                                                },
                                                Object {
                                                  "label": "Pro",
                                                  "value": "Pro",
                                                },
                                              ]
                        }
                        value="Standard"
            />
</div>,
          <div
            className="edit-tenant-input-wrapper"
>
            <label
                        className="edit-tenant-label"
            >
                        Subscription end date 
                        <sup>
                                    *
                        </sup>
            </label>
            <Calendar
                        minDate={1970-01-18T16:48:12.113Z}
                        onChange={[Function]}
                        value={1970-01-18T16:47:22.113Z}
            />
</div>,
          <div
            className="edit-tenant-input-wrapper"
>
            <Checkbox
                        checked={false}
                        inputId="edit-tenant-active"
                        label="Active"
                        name="active"
                        onChange={[Function]}
                        value={false}
            />
</div>,
        ],
        "className": "edit-tenant",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="edit-tenant-label"
                htmlFor="edit-tenant-name"
>
                Name 
                <sup>
                                *
                </sup>
</label>,
              <Input
                autoFocus={true}
                error=""
                id="edit-tenant-name"
                name="name"
                onChange={[Function]}
                value="Default"
/>,
            ],
            "className": "edit-tenant-input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Name ",
                  <sup>
                    *
</sup>,
                ],
                "className": "edit-tenant-label",
                "htmlFor": "edit-tenant-name",
              },
              "ref": null,
              "rendered": Array [
                "Name ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "sup",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "error": "",
                "id": "edit-tenant-name",
                "name": "name",
                "onChange": [Function],
                "value": "Default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="edit-tenant-label"
>
                Edition
</label>,
              <Dropdown
                onChange={[Function]}
                options={
                                Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": "Standard",
                                                },
                                                Object {
                                                  "label": "Pro",
                                                  "value": "Pro",
                                                },
                                              ]
                }
                value="Standard"
/>,
            ],
            "className": "edit-tenant-input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Edition",
                "className": "edit-tenant-label",
              },
              "ref": null,
              "rendered": "Edition",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "options": Array [
                  Object {
                    "label": "Standard",
                    "value": "Standard",
                  },
                  Object {
                    "label": "Pro",
                    "value": "Pro",
                  },
                ],
                "value": "Standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="edit-tenant-label"
>
                Subscription end date 
                <sup>
                                *
                </sup>
</label>,
              <Calendar
                minDate={1970-01-18T16:48:12.113Z}
                onChange={[Function]}
                value={1970-01-18T16:47:22.113Z}
/>,
            ],
            "className": "edit-tenant-input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Subscription end date ",
                  <sup>
                    *
</sup>,
                ],
                "className": "edit-tenant-label",
              },
              "ref": null,
              "rendered": Array [
                "Subscription end date ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "sup",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "minDate": 1970-01-18T16:48:12.113Z,
                "onChange": [Function],
                "value": 1970-01-18T16:47:22.113Z,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              inputId="edit-tenant-active"
              label="Active"
              name="active"
              onChange={[Function]}
              value={false}
/>,
            "className": "edit-tenant-input-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "inputId": "edit-tenant-active",
              "label": "Active",
              "name": "active",
              "onChange": [Function],
              "value": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <form
          className="edit-tenant"
          onSubmit={[Function]}
>
          <div
                    className="edit-tenant-input-wrapper"
          >
                    <label
                              className="edit-tenant-label"
                              htmlFor="edit-tenant-name"
                    >
                              Name 
                              <sup>
                                        *
                              </sup>
                    </label>
                    <Input
                              autoFocus={true}
                              error=""
                              id="edit-tenant-name"
                              name="name"
                              onChange={[Function]}
                              value="Default"
                    />
          </div>
          <div
                    className="edit-tenant-input-wrapper"
          >
                    <label
                              className="edit-tenant-label"
                    >
                              Edition
                    </label>
                    <Dropdown
                              onChange={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Standard",
                                                    "value": "Standard",
                                                  },
                                                  Object {
                                                    "label": "Pro",
                                                    "value": "Pro",
                                                  },
                                                ]
                              }
                              value="Standard"
                    />
          </div>
          <div
                    className="edit-tenant-input-wrapper"
          >
                    <label
                              className="edit-tenant-label"
                    >
                              Subscription end date 
                              <sup>
                                        *
                              </sup>
                    </label>
                    <Calendar
                              minDate={1970-01-18T16:48:12.113Z}
                              onChange={[Function]}
                              value={1970-01-18T16:47:22.113Z}
                    />
          </div>
          <div
                    className="edit-tenant-input-wrapper"
          >
                    <Checkbox
                              checked={false}
                              inputId="edit-tenant-active"
                              label="Active"
                              name="active"
                              onChange={[Function]}
                              value={false}
                    />
          </div>
</form>,
        "footer": <div>
          <Button
                    className="edit-tenant-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-tenant-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "header": "Edit tenant: Default",
        "inPortal": false,
        "modal": true,
        "onHide": undefined,
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="edit-tenant-input-wrapper"
>
              <label
                            className="edit-tenant-label"
                            htmlFor="edit-tenant-name"
              >
                            Name 
                            <sup>
                                          *
                            </sup>
              </label>
              <Input
                            autoFocus={true}
                            error=""
                            id="edit-tenant-name"
                            name="name"
                            onChange={[Function]}
                            value="Default"
              />
</div>,
            <div
              className="edit-tenant-input-wrapper"
>
              <label
                            className="edit-tenant-label"
              >
                            Edition
              </label>
              <Dropdown
                            onChange={[Function]}
                            options={
                                          Array [
                                                        Object {
                                                          "label": "Standard",
                                                          "value": "Standard",
                                                        },
                                                        Object {
                                                          "label": "Pro",
                                                          "value": "Pro",
                                                        },
                                                      ]
                            }
                            value="Standard"
              />
</div>,
            <div
              className="edit-tenant-input-wrapper"
>
              <label
                            className="edit-tenant-label"
              >
                            Subscription end date 
                            <sup>
                                          *
                            </sup>
              </label>
              <Calendar
                            minDate={1970-01-18T16:48:12.113Z}
                            onChange={[Function]}
                            value={1970-01-18T16:47:22.113Z}
              />
</div>,
            <div
              className="edit-tenant-input-wrapper"
>
              <Checkbox
                            checked={false}
                            inputId="edit-tenant-active"
                            label="Active"
                            name="active"
                            onChange={[Function]}
                            value={false}
              />
</div>,
          ],
          "className": "edit-tenant",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="edit-tenant-label"
                  htmlFor="edit-tenant-name"
>
                  Name 
                  <sup>
                                    *
                  </sup>
</label>,
                <Input
                  autoFocus={true}
                  error=""
                  id="edit-tenant-name"
                  name="name"
                  onChange={[Function]}
                  value="Default"
/>,
              ],
              "className": "edit-tenant-input-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Name ",
                    <sup>
                      *
</sup>,
                  ],
                  "className": "edit-tenant-label",
                  "htmlFor": "edit-tenant-name",
                },
                "ref": null,
                "rendered": Array [
                  "Name ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "*",
                    },
                    "ref": null,
                    "rendered": "*",
                    "type": "sup",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "error": "",
                  "id": "edit-tenant-name",
                  "name": "name",
                  "onChange": [Function],
                  "value": "Default",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="edit-tenant-label"
>
                  Edition
</label>,
                <Dropdown
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Standard",
                                                        "value": "Standard",
                                                      },
                                                      Object {
                                                        "label": "Pro",
                                                        "value": "Pro",
                                                      },
                                                    ]
                  }
                  value="Standard"
/>,
              ],
              "className": "edit-tenant-input-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edition",
                  "className": "edit-tenant-label",
                },
                "ref": null,
                "rendered": "Edition",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Standard",
                      "value": "Standard",
                    },
                    Object {
                      "label": "Pro",
                      "value": "Pro",
                    },
                  ],
                  "value": "Standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="edit-tenant-label"
>
                  Subscription end date 
                  <sup>
                                    *
                  </sup>
</label>,
                <Calendar
                  minDate={1970-01-18T16:48:12.113Z}
                  onChange={[Function]}
                  value={1970-01-18T16:47:22.113Z}
/>,
              ],
              "className": "edit-tenant-input-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Subscription end date ",
                    <sup>
                      *
</sup>,
                  ],
                  "className": "edit-tenant-label",
                },
                "ref": null,
                "rendered": Array [
                  "Subscription end date ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "*",
                    },
                    "ref": null,
                    "rendered": "*",
                    "type": "sup",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "minDate": 1970-01-18T16:48:12.113Z,
                  "onChange": [Function],
                  "value": 1970-01-18T16:47:22.113Z,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Checkbox
                checked={false}
                inputId="edit-tenant-active"
                label="Active"
                name="active"
                onChange={[Function]}
                value={false}
/>,
              "className": "edit-tenant-input-wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checked": false,
                "inputId": "edit-tenant-active",
                "label": "Active",
                "name": "active",
                "onChange": [Function],
                "value": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
