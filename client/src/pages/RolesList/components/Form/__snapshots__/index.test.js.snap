// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`edit form renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    role={
        Object {
            "creationTime": "1529242113",
            "id": "1",
            "roleName": "admin",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        onTabChange={[Function]}
>
        <TabPanel
                header="Role Properties"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-role-input-wrapper"
                        >
                                <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                                >
                                        Role Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value="admin"
                                />
                        </div>
                        <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                                />
                                <div
                                        className="edit-role-form-hint"
                                >
                                        Assign to new users as default
                                </div>
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header="Permissions"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                        Array [
                                                "audit-logs",
                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                        >
                                <TreeNode
                                        title="Pages"
                                >
                                        <TreeNode
                                                title="Administration"
                                        >
                                                <TreeNode
                                                        title="Audit logs"
                                                />
                                                <TreeNode
                                                        title="Email Templates"
                                                />
                                                <TreeNode
                                                        title="Hangfire Dashboard"
                                                />
                                        </TreeNode>
                                        <TreeNode
                                                title="Resources"
                                        >
                                                <TreeNode
                                                        title="Full access"
                                                />
                                        </TreeNode>
                                </TreeNode>
                                <TreeNode
                                        title="Editions"
                                >
                                        <TreeNode
                                                title="Edit Roles"
                                        />
                                </TreeNode>
                        </Tree>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-role-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-role-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "header": "Edit role: admin",
      "inPortal": false,
      "modal": true,
      "onHide": [Function],
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="Role Properties"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-role-input-wrapper"
                        >
                                    <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                    >
                                                Role Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value="admin"
                                    />
                        </div>
                        <div
                                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                    />
                                    <div
                                                className="edit-role-form-hint"
                                    >
                                                Assign to new users as default
                                    </div>
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header="Permissions"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <Tree
                                    checkable={true}
                                    defaultCheckedKeys={
                                                Array [
                                                            "audit-logs",
                                                          ]
                                    }
                                    defaultExpandAll={true}
                                    onCheck={[Function]}
                                    selectable={false}
                        >
                                    <TreeNode
                                                title="Pages"
                                    >
                                                <TreeNode
                                                            title="Administration"
                                                >
                                                            <TreeNode
                                                                        title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                        title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                        title="Hangfire Dashboard"
                                                            />
                                                </TreeNode>
                                                <TreeNode
                                                            title="Resources"
                                                >
                                                            <TreeNode
                                                                        title="Full access"
                                                            />
                                                </TreeNode>
                                    </TreeNode>
                                    <TreeNode
                                                title="Editions"
                                    >
                                                <TreeNode
                                                            title="Edit Roles"
                                                />
                                    </TreeNode>
                        </Tree>
            </form>
</TabPanel>,
        ],
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <div
                            className="edit-role-input-wrapper"
              >
                            <label
                                          className="edit-role-label"
                                          htmlFor="edit-role-name"
                            >
                                          Role Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-role-name"
                                          name="name"
                                          onChange={[Function]}
                                          value="admin"
                            />
              </div>
              <div
                            className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-role-default"
                                          label="Default"
                                          name="default"
                                          onChange={[Function]}
                                          value={false}
                            />
                            <div
                                          className="edit-role-form-hint"
                            >
                                          Assign to new users as default
                            </div>
              </div>
</form>,
            "header": "Role Properties",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-role-input-wrapper"
>
                  <label
                                    className="edit-role-label"
                                    htmlFor="edit-role-name"
                  >
                                    Role Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-role-name"
                                    name="name"
                                    onChange={[Function]}
                                    value="admin"
                  />
</div>,
                <div
                  className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-role-default"
                                    label="Default"
                                    name="default"
                                    onChange={[Function]}
                                    value={false}
                  />
                  <div
                                    className="edit-role-form-hint"
                  >
                                    Assign to new users as default
                  </div>
</div>,
              ],
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-role-label"
                      htmlFor="edit-role-name"
>
                      Role Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-role-name"
                      name="name"
                      onChange={[Function]}
                      value="admin"
/>,
                  ],
                  "className": "edit-role-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Role Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-role-label",
                      "htmlFor": "edit-role-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Role Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-role-name",
                      "name": "name",
                      "onChange": [Function],
                      "value": "admin",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Checkbox
                      checked={false}
                      inputId="edit-role-default"
                      label="Default"
                      name="default"
                      onChange={[Function]}
                      value={false}
/>,
                    <div
                      className="edit-role-form-hint"
>
                      Assign to new users as default
</div>,
                  ],
                  "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-role-default",
                      "label": "Default",
                      "name": "default",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Assign to new users as default",
                      "className": "edit-role-form-hint",
                    },
                    "ref": null,
                    "rendered": "Assign to new users as default",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <Tree
                            checkable={true}
                            defaultCheckedKeys={
                                          Array [
                                                        "audit-logs",
                                                      ]
                            }
                            defaultExpandAll={true}
                            onCheck={[Function]}
                            selectable={false}
              >
                            <TreeNode
                                          title="Pages"
                            >
                                          <TreeNode
                                                        title="Administration"
                                          >
                                                        <TreeNode
                                                                      title="Audit logs"
                                                        />
                                                        <TreeNode
                                                                      title="Email Templates"
                                                        />
                                                        <TreeNode
                                                                      title="Hangfire Dashboard"
                                                        />
                                          </TreeNode>
                                          <TreeNode
                                                        title="Resources"
                                          >
                                                        <TreeNode
                                                                      title="Full access"
                                                        />
                                          </TreeNode>
                            </TreeNode>
                            <TreeNode
                                          title="Editions"
                            >
                                          <TreeNode
                                                        title="Edit Roles"
                                          />
                            </TreeNode>
              </Tree>
</form>,
            "header": "Permissions",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Tree
                checkable={true}
                defaultCheckedKeys={
                                Array [
                                                "audit-logs",
                                              ]
                }
                defaultExpandAll={true}
                onCheck={[Function]}
                selectable={false}
>
                <TreeNode
                                title="Pages"
                >
                                <TreeNode
                                                title="Administration"
                                >
                                                <TreeNode
                                                                title="Audit logs"
                                                />
                                                <TreeNode
                                                                title="Email Templates"
                                                />
                                                <TreeNode
                                                                title="Hangfire Dashboard"
                                                />
                                </TreeNode>
                                <TreeNode
                                                title="Resources"
                                >
                                                <TreeNode
                                                                title="Full access"
                                                />
                                </TreeNode>
                </TreeNode>
                <TreeNode
                                title="Editions"
                >
                                <TreeNode
                                                title="Edit Roles"
                                />
                </TreeNode>
</Tree>,
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checkable": true,
                "children": Array [
                  <TreeNode
                    title="Pages"
>
                    <TreeNode
                                        title="Administration"
                    >
                                        <TreeNode
                                                            title="Audit logs"
                                        />
                                        <TreeNode
                                                            title="Email Templates"
                                        />
                                        <TreeNode
                                                            title="Hangfire Dashboard"
                                        />
                    </TreeNode>
                    <TreeNode
                                        title="Resources"
                    >
                                        <TreeNode
                                                            title="Full access"
                                        />
                    </TreeNode>
</TreeNode>,
                  <TreeNode
                    title="Editions"
>
                    <TreeNode
                                        title="Edit Roles"
                    />
</TreeNode>,
                ],
                "defaultCheckedKeys": Array [
                  "audit-logs",
                ],
                "defaultExpandAll": true,
                "onCheck": [Function],
                "selectable": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Documents",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Administration"
>
                        <TreeNode
                                                title="Audit logs"
                        />
                        <TreeNode
                                                title="Email Templates"
                        />
                        <TreeNode
                                                title="Hangfire Dashboard"
                        />
</TreeNode>,
                      <TreeNode
                        title="Resources"
>
                        <TreeNode
                                                title="Full access"
                        />
</TreeNode>,
                    ],
                    "title": "Pages",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "Administration",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Audit logs"
/>,
                          <TreeNode
                            title="Email Templates"
/>,
                          <TreeNode
                            title="Hangfire Dashboard"
/>,
                        ],
                        "title": "Administration",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "audit-logs",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Audit logs",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "email-templates",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Email Templates",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "hangfire-dashboard",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Hangfire Dashboard",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "Resources",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Full access"
/>,
                        ],
                        "title": "Resources",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "full-access",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Full access",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Pictures",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Edit Roles"
/>,
                    ],
                    "title": "Editions",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "edit-roles",
                      "nodeType": "class",
                      "props": Object {
                        "title": "Edit Roles",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          onTabChange={[Function]}
>
          <TabPanel
                    header="Role Properties"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-role-input-wrapper"
                              >
                                        <label
                                                  className="edit-role-label"
                                                  htmlFor="edit-role-name"
                                        >
                                                  Role Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-role-name"
                                                  name="name"
                                                  onChange={[Function]}
                                                  value="admin"
                                        />
                              </div>
                              <div
                                        className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-role-default"
                                                  label="Default"
                                                  name="default"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                                        <div
                                                  className="edit-role-form-hint"
                                        >
                                                  Assign to new users as default
                                        </div>
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header="Permissions"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <Tree
                                        checkable={true}
                                        defaultCheckedKeys={
                                                  Array [
                                                            "audit-logs",
                                                          ]
                                        }
                                        defaultExpandAll={true}
                                        onCheck={[Function]}
                                        selectable={false}
                              >
                                        <TreeNode
                                                  title="Pages"
                                        >
                                                  <TreeNode
                                                            title="Administration"
                                                  >
                                                            <TreeNode
                                                                      title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                      title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                      title="Hangfire Dashboard"
                                                            />
                                                  </TreeNode>
                                                  <TreeNode
                                                            title="Resources"
                                                  >
                                                            <TreeNode
                                                                      title="Full access"
                                                            />
                                                  </TreeNode>
                                        </TreeNode>
                                        <TreeNode
                                                  title="Editions"
                                        >
                                                  <TreeNode
                                                            title="Edit Roles"
                                                  />
                                        </TreeNode>
                              </Tree>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-role-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-role-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "header": "Edit role: admin",
        "inPortal": false,
        "modal": true,
        "onHide": [Function],
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="Role Properties"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-role-input-wrapper"
                            >
                                          <label
                                                        className="edit-role-label"
                                                        htmlFor="edit-role-name"
                                          >
                                                        Role Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-role-name"
                                                        name="name"
                                                        onChange={[Function]}
                                                        value="admin"
                                          />
                            </div>
                            <div
                                          className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-role-default"
                                                        label="Default"
                                                        name="default"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                                          <div
                                                        className="edit-role-form-hint"
                                          >
                                                        Assign to new users as default
                                          </div>
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header="Permissions"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <Tree
                                          checkable={true}
                                          defaultCheckedKeys={
                                                        Array [
                                                                      "audit-logs",
                                                                    ]
                                          }
                                          defaultExpandAll={true}
                                          onCheck={[Function]}
                                          selectable={false}
                            >
                                          <TreeNode
                                                        title="Pages"
                                          >
                                                        <TreeNode
                                                                      title="Administration"
                                                        >
                                                                      <TreeNode
                                                                                    title="Audit logs"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Email Templates"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Hangfire Dashboard"
                                                                      />
                                                        </TreeNode>
                                                        <TreeNode
                                                                      title="Resources"
                                                        >
                                                                      <TreeNode
                                                                                    title="Full access"
                                                                      />
                                                        </TreeNode>
                                          </TreeNode>
                                          <TreeNode
                                                        title="Editions"
                                          >
                                                        <TreeNode
                                                                      title="Edit Roles"
                                                        />
                                          </TreeNode>
                            </Tree>
              </form>
</TabPanel>,
          ],
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <div
                                className="edit-role-input-wrapper"
                >
                                <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                >
                                                Role Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value="admin"
                                />
                </div>
                <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                />
                                <div
                                                className="edit-role-form-hint"
                                >
                                                Assign to new users as default
                                </div>
                </div>
</form>,
              "header": "Role Properties",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-role-input-wrapper"
>
                    <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                    >
                                        Role Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value="admin"
                    />
</div>,
                  <div
                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                    />
                    <div
                                        className="edit-role-form-hint"
                    >
                                        Assign to new users as default
                    </div>
</div>,
                ],
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-role-label"
                        htmlFor="edit-role-name"
>
                        Role Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-role-name"
                        name="name"
                        onChange={[Function]}
                        value="admin"
/>,
                    ],
                    "className": "edit-role-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Role Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-role-label",
                        "htmlFor": "edit-role-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Role Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-role-name",
                        "name": "name",
                        "onChange": [Function],
                        "value": "admin",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Checkbox
                        checked={false}
                        inputId="edit-role-default"
                        label="Default"
                        name="default"
                        onChange={[Function]}
                        value={false}
/>,
                      <div
                        className="edit-role-form-hint"
>
                        Assign to new users as default
</div>,
                    ],
                    "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "checked": false,
                        "inputId": "edit-role-default",
                        "label": "Default",
                        "name": "default",
                        "onChange": [Function],
                        "value": false,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Assign to new users as default",
                        "className": "edit-role-form-hint",
                      },
                      "ref": null,
                      "rendered": "Assign to new users as default",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                                Array [
                                                                "audit-logs",
                                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                >
                                <TreeNode
                                                title="Pages"
                                >
                                                <TreeNode
                                                                title="Administration"
                                                >
                                                                <TreeNode
                                                                                title="Audit logs"
                                                                />
                                                                <TreeNode
                                                                                title="Email Templates"
                                                                />
                                                                <TreeNode
                                                                                title="Hangfire Dashboard"
                                                                />
                                                </TreeNode>
                                                <TreeNode
                                                                title="Resources"
                                                >
                                                                <TreeNode
                                                                                title="Full access"
                                                                />
                                                </TreeNode>
                                </TreeNode>
                                <TreeNode
                                                title="Editions"
                                >
                                                <TreeNode
                                                                title="Edit Roles"
                                                />
                                </TreeNode>
                </Tree>
</form>,
              "header": "Permissions",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Tree
                  checkable={true}
                  defaultCheckedKeys={
                                    Array [
                                                      "audit-logs",
                                                    ]
                  }
                  defaultExpandAll={true}
                  onCheck={[Function]}
                  selectable={false}
>
                  <TreeNode
                                    title="Pages"
                  >
                                    <TreeNode
                                                      title="Administration"
                                    >
                                                      <TreeNode
                                                                        title="Audit logs"
                                                      />
                                                      <TreeNode
                                                                        title="Email Templates"
                                                      />
                                                      <TreeNode
                                                                        title="Hangfire Dashboard"
                                                      />
                                    </TreeNode>
                                    <TreeNode
                                                      title="Resources"
                                    >
                                                      <TreeNode
                                                                        title="Full access"
                                                      />
                                    </TreeNode>
                  </TreeNode>
                  <TreeNode
                                    title="Editions"
                  >
                                    <TreeNode
                                                      title="Edit Roles"
                                    />
                  </TreeNode>
</Tree>,
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkable": true,
                  "children": Array [
                    <TreeNode
                      title="Pages"
>
                      <TreeNode
                                            title="Administration"
                      >
                                            <TreeNode
                                                                  title="Audit logs"
                                            />
                                            <TreeNode
                                                                  title="Email Templates"
                                            />
                                            <TreeNode
                                                                  title="Hangfire Dashboard"
                                            />
                      </TreeNode>
                      <TreeNode
                                            title="Resources"
                      >
                                            <TreeNode
                                                                  title="Full access"
                                            />
                      </TreeNode>
</TreeNode>,
                    <TreeNode
                      title="Editions"
>
                      <TreeNode
                                            title="Edit Roles"
                      />
</TreeNode>,
                  ],
                  "defaultCheckedKeys": Array [
                    "audit-logs",
                  ],
                  "defaultExpandAll": true,
                  "onCheck": [Function],
                  "selectable": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "Documents",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Administration"
>
                          <TreeNode
                                                    title="Audit logs"
                          />
                          <TreeNode
                                                    title="Email Templates"
                          />
                          <TreeNode
                                                    title="Hangfire Dashboard"
                          />
</TreeNode>,
                        <TreeNode
                          title="Resources"
>
                          <TreeNode
                                                    title="Full access"
                          />
</TreeNode>,
                      ],
                      "title": "Pages",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "Administration",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Audit logs"
/>,
                            <TreeNode
                              title="Email Templates"
/>,
                            <TreeNode
                              title="Hangfire Dashboard"
/>,
                          ],
                          "title": "Administration",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "audit-logs",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Audit logs",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "email-templates",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Email Templates",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "hangfire-dashboard",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Hangfire Dashboard",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "Resources",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Full access"
/>,
                          ],
                          "title": "Resources",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "full-access",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Full access",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "Pictures",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Edit Roles"
/>,
                      ],
                      "title": "Editions",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit-roles",
                        "nodeType": "class",
                        "props": Object {
                          "title": "Edit Roles",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`form with active roles properties renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    role={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        onTabChange={[Function]}
>
        <TabPanel
                header="Role Properties"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-role-input-wrapper"
                        >
                                <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                                >
                                        Role Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value=""
                                />
                        </div>
                        <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                                />
                                <div
                                        className="edit-role-form-hint"
                                >
                                        Assign to new users as default
                                </div>
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header="Permissions"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                        Array [
                                                "audit-logs",
                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                        >
                                <TreeNode
                                        title="Pages"
                                >
                                        <TreeNode
                                                title="Administration"
                                        >
                                                <TreeNode
                                                        title="Audit logs"
                                                />
                                                <TreeNode
                                                        title="Email Templates"
                                                />
                                                <TreeNode
                                                        title="Hangfire Dashboard"
                                                />
                                        </TreeNode>
                                        <TreeNode
                                                title="Resources"
                                        >
                                                <TreeNode
                                                        title="Full access"
                                                />
                                        </TreeNode>
                                </TreeNode>
                                <TreeNode
                                        title="Editions"
                                >
                                        <TreeNode
                                                title="Edit Roles"
                                        />
                                </TreeNode>
                        </Tree>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-role-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-role-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "header": "Create role",
      "inPortal": false,
      "modal": true,
      "onHide": [Function],
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="Role Properties"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-role-input-wrapper"
                        >
                                    <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                    >
                                                Role Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value=""
                                    />
                        </div>
                        <div
                                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                    />
                                    <div
                                                className="edit-role-form-hint"
                                    >
                                                Assign to new users as default
                                    </div>
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header="Permissions"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <Tree
                                    checkable={true}
                                    defaultCheckedKeys={
                                                Array [
                                                            "audit-logs",
                                                          ]
                                    }
                                    defaultExpandAll={true}
                                    onCheck={[Function]}
                                    selectable={false}
                        >
                                    <TreeNode
                                                title="Pages"
                                    >
                                                <TreeNode
                                                            title="Administration"
                                                >
                                                            <TreeNode
                                                                        title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                        title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                        title="Hangfire Dashboard"
                                                            />
                                                </TreeNode>
                                                <TreeNode
                                                            title="Resources"
                                                >
                                                            <TreeNode
                                                                        title="Full access"
                                                            />
                                                </TreeNode>
                                    </TreeNode>
                                    <TreeNode
                                                title="Editions"
                                    >
                                                <TreeNode
                                                            title="Edit Roles"
                                                />
                                    </TreeNode>
                        </Tree>
            </form>
</TabPanel>,
        ],
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <div
                            className="edit-role-input-wrapper"
              >
                            <label
                                          className="edit-role-label"
                                          htmlFor="edit-role-name"
                            >
                                          Role Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-role-name"
                                          name="name"
                                          onChange={[Function]}
                                          value=""
                            />
              </div>
              <div
                            className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-role-default"
                                          label="Default"
                                          name="default"
                                          onChange={[Function]}
                                          value={false}
                            />
                            <div
                                          className="edit-role-form-hint"
                            >
                                          Assign to new users as default
                            </div>
              </div>
</form>,
            "header": "Role Properties",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-role-input-wrapper"
>
                  <label
                                    className="edit-role-label"
                                    htmlFor="edit-role-name"
                  >
                                    Role Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-role-name"
                                    name="name"
                                    onChange={[Function]}
                                    value=""
                  />
</div>,
                <div
                  className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-role-default"
                                    label="Default"
                                    name="default"
                                    onChange={[Function]}
                                    value={false}
                  />
                  <div
                                    className="edit-role-form-hint"
                  >
                                    Assign to new users as default
                  </div>
</div>,
              ],
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-role-label"
                      htmlFor="edit-role-name"
>
                      Role Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-role-name"
                      name="name"
                      onChange={[Function]}
                      value=""
/>,
                  ],
                  "className": "edit-role-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Role Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-role-label",
                      "htmlFor": "edit-role-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Role Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-role-name",
                      "name": "name",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Checkbox
                      checked={false}
                      inputId="edit-role-default"
                      label="Default"
                      name="default"
                      onChange={[Function]}
                      value={false}
/>,
                    <div
                      className="edit-role-form-hint"
>
                      Assign to new users as default
</div>,
                  ],
                  "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-role-default",
                      "label": "Default",
                      "name": "default",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Assign to new users as default",
                      "className": "edit-role-form-hint",
                    },
                    "ref": null,
                    "rendered": "Assign to new users as default",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <Tree
                            checkable={true}
                            defaultCheckedKeys={
                                          Array [
                                                        "audit-logs",
                                                      ]
                            }
                            defaultExpandAll={true}
                            onCheck={[Function]}
                            selectable={false}
              >
                            <TreeNode
                                          title="Pages"
                            >
                                          <TreeNode
                                                        title="Administration"
                                          >
                                                        <TreeNode
                                                                      title="Audit logs"
                                                        />
                                                        <TreeNode
                                                                      title="Email Templates"
                                                        />
                                                        <TreeNode
                                                                      title="Hangfire Dashboard"
                                                        />
                                          </TreeNode>
                                          <TreeNode
                                                        title="Resources"
                                          >
                                                        <TreeNode
                                                                      title="Full access"
                                                        />
                                          </TreeNode>
                            </TreeNode>
                            <TreeNode
                                          title="Editions"
                            >
                                          <TreeNode
                                                        title="Edit Roles"
                                          />
                            </TreeNode>
              </Tree>
</form>,
            "header": "Permissions",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Tree
                checkable={true}
                defaultCheckedKeys={
                                Array [
                                                "audit-logs",
                                              ]
                }
                defaultExpandAll={true}
                onCheck={[Function]}
                selectable={false}
>
                <TreeNode
                                title="Pages"
                >
                                <TreeNode
                                                title="Administration"
                                >
                                                <TreeNode
                                                                title="Audit logs"
                                                />
                                                <TreeNode
                                                                title="Email Templates"
                                                />
                                                <TreeNode
                                                                title="Hangfire Dashboard"
                                                />
                                </TreeNode>
                                <TreeNode
                                                title="Resources"
                                >
                                                <TreeNode
                                                                title="Full access"
                                                />
                                </TreeNode>
                </TreeNode>
                <TreeNode
                                title="Editions"
                >
                                <TreeNode
                                                title="Edit Roles"
                                />
                </TreeNode>
</Tree>,
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checkable": true,
                "children": Array [
                  <TreeNode
                    title="Pages"
>
                    <TreeNode
                                        title="Administration"
                    >
                                        <TreeNode
                                                            title="Audit logs"
                                        />
                                        <TreeNode
                                                            title="Email Templates"
                                        />
                                        <TreeNode
                                                            title="Hangfire Dashboard"
                                        />
                    </TreeNode>
                    <TreeNode
                                        title="Resources"
                    >
                                        <TreeNode
                                                            title="Full access"
                                        />
                    </TreeNode>
</TreeNode>,
                  <TreeNode
                    title="Editions"
>
                    <TreeNode
                                        title="Edit Roles"
                    />
</TreeNode>,
                ],
                "defaultCheckedKeys": Array [
                  "audit-logs",
                ],
                "defaultExpandAll": true,
                "onCheck": [Function],
                "selectable": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Documents",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Administration"
>
                        <TreeNode
                                                title="Audit logs"
                        />
                        <TreeNode
                                                title="Email Templates"
                        />
                        <TreeNode
                                                title="Hangfire Dashboard"
                        />
</TreeNode>,
                      <TreeNode
                        title="Resources"
>
                        <TreeNode
                                                title="Full access"
                        />
</TreeNode>,
                    ],
                    "title": "Pages",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "Administration",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Audit logs"
/>,
                          <TreeNode
                            title="Email Templates"
/>,
                          <TreeNode
                            title="Hangfire Dashboard"
/>,
                        ],
                        "title": "Administration",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "audit-logs",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Audit logs",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "email-templates",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Email Templates",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "hangfire-dashboard",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Hangfire Dashboard",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "Resources",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Full access"
/>,
                        ],
                        "title": "Resources",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "full-access",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Full access",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Pictures",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Edit Roles"
/>,
                    ],
                    "title": "Editions",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "edit-roles",
                      "nodeType": "class",
                      "props": Object {
                        "title": "Edit Roles",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          onTabChange={[Function]}
>
          <TabPanel
                    header="Role Properties"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-role-input-wrapper"
                              >
                                        <label
                                                  className="edit-role-label"
                                                  htmlFor="edit-role-name"
                                        >
                                                  Role Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-role-name"
                                                  name="name"
                                                  onChange={[Function]}
                                                  value=""
                                        />
                              </div>
                              <div
                                        className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-role-default"
                                                  label="Default"
                                                  name="default"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                                        <div
                                                  className="edit-role-form-hint"
                                        >
                                                  Assign to new users as default
                                        </div>
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header="Permissions"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <Tree
                                        checkable={true}
                                        defaultCheckedKeys={
                                                  Array [
                                                            "audit-logs",
                                                          ]
                                        }
                                        defaultExpandAll={true}
                                        onCheck={[Function]}
                                        selectable={false}
                              >
                                        <TreeNode
                                                  title="Pages"
                                        >
                                                  <TreeNode
                                                            title="Administration"
                                                  >
                                                            <TreeNode
                                                                      title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                      title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                      title="Hangfire Dashboard"
                                                            />
                                                  </TreeNode>
                                                  <TreeNode
                                                            title="Resources"
                                                  >
                                                            <TreeNode
                                                                      title="Full access"
                                                            />
                                                  </TreeNode>
                                        </TreeNode>
                                        <TreeNode
                                                  title="Editions"
                                        >
                                                  <TreeNode
                                                            title="Edit Roles"
                                                  />
                                        </TreeNode>
                              </Tree>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-role-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-role-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "header": "Create role",
        "inPortal": false,
        "modal": true,
        "onHide": [Function],
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="Role Properties"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-role-input-wrapper"
                            >
                                          <label
                                                        className="edit-role-label"
                                                        htmlFor="edit-role-name"
                                          >
                                                        Role Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-role-name"
                                                        name="name"
                                                        onChange={[Function]}
                                                        value=""
                                          />
                            </div>
                            <div
                                          className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-role-default"
                                                        label="Default"
                                                        name="default"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                                          <div
                                                        className="edit-role-form-hint"
                                          >
                                                        Assign to new users as default
                                          </div>
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header="Permissions"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <Tree
                                          checkable={true}
                                          defaultCheckedKeys={
                                                        Array [
                                                                      "audit-logs",
                                                                    ]
                                          }
                                          defaultExpandAll={true}
                                          onCheck={[Function]}
                                          selectable={false}
                            >
                                          <TreeNode
                                                        title="Pages"
                                          >
                                                        <TreeNode
                                                                      title="Administration"
                                                        >
                                                                      <TreeNode
                                                                                    title="Audit logs"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Email Templates"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Hangfire Dashboard"
                                                                      />
                                                        </TreeNode>
                                                        <TreeNode
                                                                      title="Resources"
                                                        >
                                                                      <TreeNode
                                                                                    title="Full access"
                                                                      />
                                                        </TreeNode>
                                          </TreeNode>
                                          <TreeNode
                                                        title="Editions"
                                          >
                                                        <TreeNode
                                                                      title="Edit Roles"
                                                        />
                                          </TreeNode>
                            </Tree>
              </form>
</TabPanel>,
          ],
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <div
                                className="edit-role-input-wrapper"
                >
                                <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                >
                                                Role Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value=""
                                />
                </div>
                <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                />
                                <div
                                                className="edit-role-form-hint"
                                >
                                                Assign to new users as default
                                </div>
                </div>
</form>,
              "header": "Role Properties",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-role-input-wrapper"
>
                    <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                    >
                                        Role Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value=""
                    />
</div>,
                  <div
                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                    />
                    <div
                                        className="edit-role-form-hint"
                    >
                                        Assign to new users as default
                    </div>
</div>,
                ],
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-role-label"
                        htmlFor="edit-role-name"
>
                        Role Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-role-name"
                        name="name"
                        onChange={[Function]}
                        value=""
/>,
                    ],
                    "className": "edit-role-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Role Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-role-label",
                        "htmlFor": "edit-role-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Role Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-role-name",
                        "name": "name",
                        "onChange": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Checkbox
                        checked={false}
                        inputId="edit-role-default"
                        label="Default"
                        name="default"
                        onChange={[Function]}
                        value={false}
/>,
                      <div
                        className="edit-role-form-hint"
>
                        Assign to new users as default
</div>,
                    ],
                    "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "checked": false,
                        "inputId": "edit-role-default",
                        "label": "Default",
                        "name": "default",
                        "onChange": [Function],
                        "value": false,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Assign to new users as default",
                        "className": "edit-role-form-hint",
                      },
                      "ref": null,
                      "rendered": "Assign to new users as default",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                                Array [
                                                                "audit-logs",
                                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                >
                                <TreeNode
                                                title="Pages"
                                >
                                                <TreeNode
                                                                title="Administration"
                                                >
                                                                <TreeNode
                                                                                title="Audit logs"
                                                                />
                                                                <TreeNode
                                                                                title="Email Templates"
                                                                />
                                                                <TreeNode
                                                                                title="Hangfire Dashboard"
                                                                />
                                                </TreeNode>
                                                <TreeNode
                                                                title="Resources"
                                                >
                                                                <TreeNode
                                                                                title="Full access"
                                                                />
                                                </TreeNode>
                                </TreeNode>
                                <TreeNode
                                                title="Editions"
                                >
                                                <TreeNode
                                                                title="Edit Roles"
                                                />
                                </TreeNode>
                </Tree>
</form>,
              "header": "Permissions",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Tree
                  checkable={true}
                  defaultCheckedKeys={
                                    Array [
                                                      "audit-logs",
                                                    ]
                  }
                  defaultExpandAll={true}
                  onCheck={[Function]}
                  selectable={false}
>
                  <TreeNode
                                    title="Pages"
                  >
                                    <TreeNode
                                                      title="Administration"
                                    >
                                                      <TreeNode
                                                                        title="Audit logs"
                                                      />
                                                      <TreeNode
                                                                        title="Email Templates"
                                                      />
                                                      <TreeNode
                                                                        title="Hangfire Dashboard"
                                                      />
                                    </TreeNode>
                                    <TreeNode
                                                      title="Resources"
                                    >
                                                      <TreeNode
                                                                        title="Full access"
                                                      />
                                    </TreeNode>
                  </TreeNode>
                  <TreeNode
                                    title="Editions"
                  >
                                    <TreeNode
                                                      title="Edit Roles"
                                    />
                  </TreeNode>
</Tree>,
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkable": true,
                  "children": Array [
                    <TreeNode
                      title="Pages"
>
                      <TreeNode
                                            title="Administration"
                      >
                                            <TreeNode
                                                                  title="Audit logs"
                                            />
                                            <TreeNode
                                                                  title="Email Templates"
                                            />
                                            <TreeNode
                                                                  title="Hangfire Dashboard"
                                            />
                      </TreeNode>
                      <TreeNode
                                            title="Resources"
                      >
                                            <TreeNode
                                                                  title="Full access"
                                            />
                      </TreeNode>
</TreeNode>,
                    <TreeNode
                      title="Editions"
>
                      <TreeNode
                                            title="Edit Roles"
                      />
</TreeNode>,
                  ],
                  "defaultCheckedKeys": Array [
                    "audit-logs",
                  ],
                  "defaultExpandAll": true,
                  "onCheck": [Function],
                  "selectable": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "Documents",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Administration"
>
                          <TreeNode
                                                    title="Audit logs"
                          />
                          <TreeNode
                                                    title="Email Templates"
                          />
                          <TreeNode
                                                    title="Hangfire Dashboard"
                          />
</TreeNode>,
                        <TreeNode
                          title="Resources"
>
                          <TreeNode
                                                    title="Full access"
                          />
</TreeNode>,
                      ],
                      "title": "Pages",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "Administration",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Audit logs"
/>,
                            <TreeNode
                              title="Email Templates"
/>,
                            <TreeNode
                              title="Hangfire Dashboard"
/>,
                          ],
                          "title": "Administration",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "audit-logs",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Audit logs",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "email-templates",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Email Templates",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "hangfire-dashboard",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Hangfire Dashboard",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "Resources",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Full access"
/>,
                          ],
                          "title": "Resources",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "full-access",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Full access",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "Pictures",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Edit Roles"
/>,
                      ],
                      "title": "Editions",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit-roles",
                        "nodeType": "class",
                        "props": Object {
                          "title": "Edit Roles",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    role={
        Object {
            "creationTime": "1529242113",
            "id": "1",
            "roleName": "admin",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TabView
        activeIndex={0}
        onTabChange={[Function]}
>
        <TabPanel
                header="Role Properties"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <div
                                className="edit-role-input-wrapper"
                        >
                                <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                                >
                                        Role Name 
                                        <sup>
                                                *
                                        </sup>
                                </label>
                                <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value="admin"
                                />
                        </div>
                        <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                                />
                                <div
                                        className="edit-role-form-hint"
                                >
                                        Assign to new users as default
                                </div>
                        </div>
                </form>
        </TabPanel>
        <TabPanel
                header="Permissions"
        >
                <form
                        className="edit-role"
                        onSubmit={[Function]}
                >
                        <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                        Array [
                                                "audit-logs",
                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                        >
                                <TreeNode
                                        title="Pages"
                                >
                                        <TreeNode
                                                title="Administration"
                                        >
                                                <TreeNode
                                                        title="Audit logs"
                                                />
                                                <TreeNode
                                                        title="Email Templates"
                                                />
                                                <TreeNode
                                                        title="Hangfire Dashboard"
                                                />
                                        </TreeNode>
                                        <TreeNode
                                                title="Resources"
                                        >
                                                <TreeNode
                                                        title="Full access"
                                                />
                                        </TreeNode>
                                </TreeNode>
                                <TreeNode
                                        title="Editions"
                                >
                                        <TreeNode
                                                title="Edit Roles"
                                        />
                                </TreeNode>
                        </Tree>
                </form>
        </TabPanel>
</TabView>,
      "footer": <div>
        <Button
                className="edit-role-cancel-button"
                onClick={undefined}
                secondary={true}
        >
                Cancel
        </Button>
        <Button
                className="edit-role-save-button"
                onClick={[Function]}
        >
                Save
        </Button>
</div>,
      "header": "Edit role: admin",
      "inPortal": false,
      "modal": true,
      "onHide": [Function],
      "visible": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeIndex": 0,
        "children": Array [
          <TabPanel
            header="Role Properties"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <div
                                    className="edit-role-input-wrapper"
                        >
                                    <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                    >
                                                Role Name 
                                                <sup>
                                                            *
                                                </sup>
                                    </label>
                                    <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value="admin"
                                    />
                        </div>
                        <div
                                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                        >
                                    <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                    />
                                    <div
                                                className="edit-role-form-hint"
                                    >
                                                Assign to new users as default
                                    </div>
                        </div>
            </form>
</TabPanel>,
          <TabPanel
            header="Permissions"
>
            <form
                        className="edit-role"
                        onSubmit={[Function]}
            >
                        <Tree
                                    checkable={true}
                                    defaultCheckedKeys={
                                                Array [
                                                            "audit-logs",
                                                          ]
                                    }
                                    defaultExpandAll={true}
                                    onCheck={[Function]}
                                    selectable={false}
                        >
                                    <TreeNode
                                                title="Pages"
                                    >
                                                <TreeNode
                                                            title="Administration"
                                                >
                                                            <TreeNode
                                                                        title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                        title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                        title="Hangfire Dashboard"
                                                            />
                                                </TreeNode>
                                                <TreeNode
                                                            title="Resources"
                                                >
                                                            <TreeNode
                                                                        title="Full access"
                                                            />
                                                </TreeNode>
                                    </TreeNode>
                                    <TreeNode
                                                title="Editions"
                                    >
                                                <TreeNode
                                                            title="Edit Roles"
                                                />
                                    </TreeNode>
                        </Tree>
            </form>
</TabPanel>,
        ],
        "onTabChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <div
                            className="edit-role-input-wrapper"
              >
                            <label
                                          className="edit-role-label"
                                          htmlFor="edit-role-name"
                            >
                                          Role Name 
                                          <sup>
                                                        *
                                          </sup>
                            </label>
                            <Input
                                          autoFocus={true}
                                          error=""
                                          id="edit-role-name"
                                          name="name"
                                          onChange={[Function]}
                                          value="admin"
                            />
              </div>
              <div
                            className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
              >
                            <Checkbox
                                          checked={false}
                                          inputId="edit-role-default"
                                          label="Default"
                                          name="default"
                                          onChange={[Function]}
                                          value={false}
                            />
                            <div
                                          className="edit-role-form-hint"
                            >
                                          Assign to new users as default
                            </div>
              </div>
</form>,
            "header": "Role Properties",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="edit-role-input-wrapper"
>
                  <label
                                    className="edit-role-label"
                                    htmlFor="edit-role-name"
                  >
                                    Role Name 
                                    <sup>
                                                      *
                                    </sup>
                  </label>
                  <Input
                                    autoFocus={true}
                                    error=""
                                    id="edit-role-name"
                                    name="name"
                                    onChange={[Function]}
                                    value="admin"
                  />
</div>,
                <div
                  className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                  <Checkbox
                                    checked={false}
                                    inputId="edit-role-default"
                                    label="Default"
                                    name="default"
                                    onChange={[Function]}
                                    value={false}
                  />
                  <div
                                    className="edit-role-form-hint"
                  >
                                    Assign to new users as default
                  </div>
</div>,
              ],
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      className="edit-role-label"
                      htmlFor="edit-role-name"
>
                      Role Name 
                      <sup>
                                            *
                      </sup>
</label>,
                    <Input
                      autoFocus={true}
                      error=""
                      id="edit-role-name"
                      name="name"
                      onChange={[Function]}
                      value="admin"
/>,
                  ],
                  "className": "edit-role-input-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Role Name ",
                        <sup>
                          *
</sup>,
                      ],
                      "className": "edit-role-label",
                      "htmlFor": "edit-role-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Role Name ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "*",
                        },
                        "ref": null,
                        "rendered": "*",
                        "type": "sup",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": true,
                      "error": "",
                      "id": "edit-role-name",
                      "name": "name",
                      "onChange": [Function],
                      "value": "admin",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Checkbox
                      checked={false}
                      inputId="edit-role-default"
                      label="Default"
                      name="default"
                      onChange={[Function]}
                      value={false}
/>,
                    <div
                      className="edit-role-form-hint"
>
                      Assign to new users as default
</div>,
                  ],
                  "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "inputId": "edit-role-default",
                      "label": "Default",
                      "name": "default",
                      "onChange": [Function],
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Assign to new users as default",
                      "className": "edit-role-form-hint",
                    },
                    "ref": null,
                    "rendered": "Assign to new users as default",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="edit-role"
              onSubmit={[Function]}
>
              <Tree
                            checkable={true}
                            defaultCheckedKeys={
                                          Array [
                                                        "audit-logs",
                                                      ]
                            }
                            defaultExpandAll={true}
                            onCheck={[Function]}
                            selectable={false}
              >
                            <TreeNode
                                          title="Pages"
                            >
                                          <TreeNode
                                                        title="Administration"
                                          >
                                                        <TreeNode
                                                                      title="Audit logs"
                                                        />
                                                        <TreeNode
                                                                      title="Email Templates"
                                                        />
                                                        <TreeNode
                                                                      title="Hangfire Dashboard"
                                                        />
                                          </TreeNode>
                                          <TreeNode
                                                        title="Resources"
                                          >
                                                        <TreeNode
                                                                      title="Full access"
                                                        />
                                          </TreeNode>
                            </TreeNode>
                            <TreeNode
                                          title="Editions"
                            >
                                          <TreeNode
                                                        title="Edit Roles"
                                          />
                            </TreeNode>
              </Tree>
</form>,
            "header": "Permissions",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Tree
                checkable={true}
                defaultCheckedKeys={
                                Array [
                                                "audit-logs",
                                              ]
                }
                defaultExpandAll={true}
                onCheck={[Function]}
                selectable={false}
>
                <TreeNode
                                title="Pages"
                >
                                <TreeNode
                                                title="Administration"
                                >
                                                <TreeNode
                                                                title="Audit logs"
                                                />
                                                <TreeNode
                                                                title="Email Templates"
                                                />
                                                <TreeNode
                                                                title="Hangfire Dashboard"
                                                />
                                </TreeNode>
                                <TreeNode
                                                title="Resources"
                                >
                                                <TreeNode
                                                                title="Full access"
                                                />
                                </TreeNode>
                </TreeNode>
                <TreeNode
                                title="Editions"
                >
                                <TreeNode
                                                title="Edit Roles"
                                />
                </TreeNode>
</Tree>,
              "className": "edit-role",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checkable": true,
                "children": Array [
                  <TreeNode
                    title="Pages"
>
                    <TreeNode
                                        title="Administration"
                    >
                                        <TreeNode
                                                            title="Audit logs"
                                        />
                                        <TreeNode
                                                            title="Email Templates"
                                        />
                                        <TreeNode
                                                            title="Hangfire Dashboard"
                                        />
                    </TreeNode>
                    <TreeNode
                                        title="Resources"
                    >
                                        <TreeNode
                                                            title="Full access"
                                        />
                    </TreeNode>
</TreeNode>,
                  <TreeNode
                    title="Editions"
>
                    <TreeNode
                                        title="Edit Roles"
                    />
</TreeNode>,
                ],
                "defaultCheckedKeys": Array [
                  "audit-logs",
                ],
                "defaultExpandAll": true,
                "onCheck": [Function],
                "selectable": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Documents",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Administration"
>
                        <TreeNode
                                                title="Audit logs"
                        />
                        <TreeNode
                                                title="Email Templates"
                        />
                        <TreeNode
                                                title="Hangfire Dashboard"
                        />
</TreeNode>,
                      <TreeNode
                        title="Resources"
>
                        <TreeNode
                                                title="Full access"
                        />
</TreeNode>,
                    ],
                    "title": "Pages",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "Administration",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Audit logs"
/>,
                          <TreeNode
                            title="Email Templates"
/>,
                          <TreeNode
                            title="Hangfire Dashboard"
/>,
                        ],
                        "title": "Administration",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "audit-logs",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Audit logs",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "email-templates",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Email Templates",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "hangfire-dashboard",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Hangfire Dashboard",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "Resources",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <TreeNode
                            title="Full access"
/>,
                        ],
                        "title": "Resources",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "full-access",
                          "nodeType": "class",
                          "props": Object {
                            "title": "Full access",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Pictures",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TreeNode
                        title="Edit Roles"
/>,
                    ],
                    "title": "Editions",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "edit-roles",
                      "nodeType": "class",
                      "props": Object {
                        "title": "Edit Roles",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "form",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TabView
          activeIndex={0}
          onTabChange={[Function]}
>
          <TabPanel
                    header="Role Properties"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <div
                                        className="edit-role-input-wrapper"
                              >
                                        <label
                                                  className="edit-role-label"
                                                  htmlFor="edit-role-name"
                                        >
                                                  Role Name 
                                                  <sup>
                                                            *
                                                  </sup>
                                        </label>
                                        <Input
                                                  autoFocus={true}
                                                  error=""
                                                  id="edit-role-name"
                                                  name="name"
                                                  onChange={[Function]}
                                                  value="admin"
                                        />
                              </div>
                              <div
                                        className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                              >
                                        <Checkbox
                                                  checked={false}
                                                  inputId="edit-role-default"
                                                  label="Default"
                                                  name="default"
                                                  onChange={[Function]}
                                                  value={false}
                                        />
                                        <div
                                                  className="edit-role-form-hint"
                                        >
                                                  Assign to new users as default
                                        </div>
                              </div>
                    </form>
          </TabPanel>
          <TabPanel
                    header="Permissions"
          >
                    <form
                              className="edit-role"
                              onSubmit={[Function]}
                    >
                              <Tree
                                        checkable={true}
                                        defaultCheckedKeys={
                                                  Array [
                                                            "audit-logs",
                                                          ]
                                        }
                                        defaultExpandAll={true}
                                        onCheck={[Function]}
                                        selectable={false}
                              >
                                        <TreeNode
                                                  title="Pages"
                                        >
                                                  <TreeNode
                                                            title="Administration"
                                                  >
                                                            <TreeNode
                                                                      title="Audit logs"
                                                            />
                                                            <TreeNode
                                                                      title="Email Templates"
                                                            />
                                                            <TreeNode
                                                                      title="Hangfire Dashboard"
                                                            />
                                                  </TreeNode>
                                                  <TreeNode
                                                            title="Resources"
                                                  >
                                                            <TreeNode
                                                                      title="Full access"
                                                            />
                                                  </TreeNode>
                                        </TreeNode>
                                        <TreeNode
                                                  title="Editions"
                                        >
                                                  <TreeNode
                                                            title="Edit Roles"
                                                  />
                                        </TreeNode>
                              </Tree>
                    </form>
          </TabPanel>
</TabView>,
        "footer": <div>
          <Button
                    className="edit-role-cancel-button"
                    onClick={undefined}
                    secondary={true}
          >
                    Cancel
          </Button>
          <Button
                    className="edit-role-save-button"
                    onClick={[Function]}
          >
                    Save
          </Button>
</div>,
        "header": "Edit role: admin",
        "inPortal": false,
        "modal": true,
        "onHide": [Function],
        "visible": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeIndex": 0,
          "children": Array [
            <TabPanel
              header="Role Properties"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <div
                                          className="edit-role-input-wrapper"
                            >
                                          <label
                                                        className="edit-role-label"
                                                        htmlFor="edit-role-name"
                                          >
                                                        Role Name 
                                                        <sup>
                                                                      *
                                                        </sup>
                                          </label>
                                          <Input
                                                        autoFocus={true}
                                                        error=""
                                                        id="edit-role-name"
                                                        name="name"
                                                        onChange={[Function]}
                                                        value="admin"
                                          />
                            </div>
                            <div
                                          className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                            >
                                          <Checkbox
                                                        checked={false}
                                                        inputId="edit-role-default"
                                                        label="Default"
                                                        name="default"
                                                        onChange={[Function]}
                                                        value={false}
                                          />
                                          <div
                                                        className="edit-role-form-hint"
                                          >
                                                        Assign to new users as default
                                          </div>
                            </div>
              </form>
</TabPanel>,
            <TabPanel
              header="Permissions"
>
              <form
                            className="edit-role"
                            onSubmit={[Function]}
              >
                            <Tree
                                          checkable={true}
                                          defaultCheckedKeys={
                                                        Array [
                                                                      "audit-logs",
                                                                    ]
                                          }
                                          defaultExpandAll={true}
                                          onCheck={[Function]}
                                          selectable={false}
                            >
                                          <TreeNode
                                                        title="Pages"
                                          >
                                                        <TreeNode
                                                                      title="Administration"
                                                        >
                                                                      <TreeNode
                                                                                    title="Audit logs"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Email Templates"
                                                                      />
                                                                      <TreeNode
                                                                                    title="Hangfire Dashboard"
                                                                      />
                                                        </TreeNode>
                                                        <TreeNode
                                                                      title="Resources"
                                                        >
                                                                      <TreeNode
                                                                                    title="Full access"
                                                                      />
                                                        </TreeNode>
                                          </TreeNode>
                                          <TreeNode
                                                        title="Editions"
                                          >
                                                        <TreeNode
                                                                      title="Edit Roles"
                                                        />
                                          </TreeNode>
                            </Tree>
              </form>
</TabPanel>,
          ],
          "onTabChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <div
                                className="edit-role-input-wrapper"
                >
                                <label
                                                className="edit-role-label"
                                                htmlFor="edit-role-name"
                                >
                                                Role Name 
                                                <sup>
                                                                *
                                                </sup>
                                </label>
                                <Input
                                                autoFocus={true}
                                                error=""
                                                id="edit-role-name"
                                                name="name"
                                                onChange={[Function]}
                                                value="admin"
                                />
                </div>
                <div
                                className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
                >
                                <Checkbox
                                                checked={false}
                                                inputId="edit-role-default"
                                                label="Default"
                                                name="default"
                                                onChange={[Function]}
                                                value={false}
                                />
                                <div
                                                className="edit-role-form-hint"
                                >
                                                Assign to new users as default
                                </div>
                </div>
</form>,
              "header": "Role Properties",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="edit-role-input-wrapper"
>
                    <label
                                        className="edit-role-label"
                                        htmlFor="edit-role-name"
                    >
                                        Role Name 
                                        <sup>
                                                            *
                                        </sup>
                    </label>
                    <Input
                                        autoFocus={true}
                                        error=""
                                        id="edit-role-name"
                                        name="name"
                                        onChange={[Function]}
                                        value="admin"
                    />
</div>,
                  <div
                    className="edit-role-input-wrapper edit-role-input-wrapper-checkbox"
>
                    <Checkbox
                                        checked={false}
                                        inputId="edit-role-default"
                                        label="Default"
                                        name="default"
                                        onChange={[Function]}
                                        value={false}
                    />
                    <div
                                        className="edit-role-form-hint"
                    >
                                        Assign to new users as default
                    </div>
</div>,
                ],
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="edit-role-label"
                        htmlFor="edit-role-name"
>
                        Role Name 
                        <sup>
                                                *
                        </sup>
</label>,
                      <Input
                        autoFocus={true}
                        error=""
                        id="edit-role-name"
                        name="name"
                        onChange={[Function]}
                        value="admin"
/>,
                    ],
                    "className": "edit-role-input-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Role Name ",
                          <sup>
                            *
</sup>,
                        ],
                        "className": "edit-role-label",
                        "htmlFor": "edit-role-name",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Role Name ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "*",
                          },
                          "ref": null,
                          "rendered": "*",
                          "type": "sup",
                        },
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "error": "",
                        "id": "edit-role-name",
                        "name": "name",
                        "onChange": [Function],
                        "value": "admin",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Checkbox
                        checked={false}
                        inputId="edit-role-default"
                        label="Default"
                        name="default"
                        onChange={[Function]}
                        value={false}
/>,
                      <div
                        className="edit-role-form-hint"
>
                        Assign to new users as default
</div>,
                    ],
                    "className": "edit-role-input-wrapper edit-role-input-wrapper-checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "checked": false,
                        "inputId": "edit-role-default",
                        "label": "Default",
                        "name": "default",
                        "onChange": [Function],
                        "value": false,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Assign to new users as default",
                        "className": "edit-role-form-hint",
                      },
                      "ref": null,
                      "rendered": "Assign to new users as default",
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                className="edit-role"
                onSubmit={[Function]}
>
                <Tree
                                checkable={true}
                                defaultCheckedKeys={
                                                Array [
                                                                "audit-logs",
                                                              ]
                                }
                                defaultExpandAll={true}
                                onCheck={[Function]}
                                selectable={false}
                >
                                <TreeNode
                                                title="Pages"
                                >
                                                <TreeNode
                                                                title="Administration"
                                                >
                                                                <TreeNode
                                                                                title="Audit logs"
                                                                />
                                                                <TreeNode
                                                                                title="Email Templates"
                                                                />
                                                                <TreeNode
                                                                                title="Hangfire Dashboard"
                                                                />
                                                </TreeNode>
                                                <TreeNode
                                                                title="Resources"
                                                >
                                                                <TreeNode
                                                                                title="Full access"
                                                                />
                                                </TreeNode>
                                </TreeNode>
                                <TreeNode
                                                title="Editions"
                                >
                                                <TreeNode
                                                                title="Edit Roles"
                                                />
                                </TreeNode>
                </Tree>
</form>,
              "header": "Permissions",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Tree
                  checkable={true}
                  defaultCheckedKeys={
                                    Array [
                                                      "audit-logs",
                                                    ]
                  }
                  defaultExpandAll={true}
                  onCheck={[Function]}
                  selectable={false}
>
                  <TreeNode
                                    title="Pages"
                  >
                                    <TreeNode
                                                      title="Administration"
                                    >
                                                      <TreeNode
                                                                        title="Audit logs"
                                                      />
                                                      <TreeNode
                                                                        title="Email Templates"
                                                      />
                                                      <TreeNode
                                                                        title="Hangfire Dashboard"
                                                      />
                                    </TreeNode>
                                    <TreeNode
                                                      title="Resources"
                                    >
                                                      <TreeNode
                                                                        title="Full access"
                                                      />
                                    </TreeNode>
                  </TreeNode>
                  <TreeNode
                                    title="Editions"
                  >
                                    <TreeNode
                                                      title="Edit Roles"
                                    />
                  </TreeNode>
</Tree>,
                "className": "edit-role",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkable": true,
                  "children": Array [
                    <TreeNode
                      title="Pages"
>
                      <TreeNode
                                            title="Administration"
                      >
                                            <TreeNode
                                                                  title="Audit logs"
                                            />
                                            <TreeNode
                                                                  title="Email Templates"
                                            />
                                            <TreeNode
                                                                  title="Hangfire Dashboard"
                                            />
                      </TreeNode>
                      <TreeNode
                                            title="Resources"
                      >
                                            <TreeNode
                                                                  title="Full access"
                                            />
                      </TreeNode>
</TreeNode>,
                    <TreeNode
                      title="Editions"
>
                      <TreeNode
                                            title="Edit Roles"
                      />
</TreeNode>,
                  ],
                  "defaultCheckedKeys": Array [
                    "audit-logs",
                  ],
                  "defaultExpandAll": true,
                  "onCheck": [Function],
                  "selectable": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "Documents",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Administration"
>
                          <TreeNode
                                                    title="Audit logs"
                          />
                          <TreeNode
                                                    title="Email Templates"
                          />
                          <TreeNode
                                                    title="Hangfire Dashboard"
                          />
</TreeNode>,
                        <TreeNode
                          title="Resources"
>
                          <TreeNode
                                                    title="Full access"
                          />
</TreeNode>,
                      ],
                      "title": "Pages",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "Administration",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Audit logs"
/>,
                            <TreeNode
                              title="Email Templates"
/>,
                            <TreeNode
                              title="Hangfire Dashboard"
/>,
                          ],
                          "title": "Administration",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "audit-logs",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Audit logs",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "email-templates",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Email Templates",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "hangfire-dashboard",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Hangfire Dashboard",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "Resources",
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <TreeNode
                              title="Full access"
/>,
                          ],
                          "title": "Resources",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "full-access",
                            "nodeType": "class",
                            "props": Object {
                              "title": "Full access",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "Pictures",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <TreeNode
                          title="Edit Roles"
/>,
                      ],
                      "title": "Editions",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit-roles",
                        "nodeType": "class",
                        "props": Object {
                          "title": "Edit Roles",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "form",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
